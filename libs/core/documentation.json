{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "SioCoreAppComponent",
            "id": "component-SioCoreAppComponent-d749a317d2976575ec2f24a2a892a2a975e290bee39be2d81861ebc9e6e4ec5c2e5dfb996c451c203fe6fa6dd0b1fb8caf6131b6ec921dc7d3cf26d7431caf1b",
            "file": "libs/core/src/lib/components/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-app",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "environmentInjector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EnvironmentInjector | undefined",
                    "decorators": []
                },
                {
                    "name": "leftPanelMenuID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nmenu id code to use in the left sidebar. will be displayed as the default component if no content is inserted into the left_content slot\n",
                    "description": "<p>menu id code to use in the left sidebar. will be displayed as the default component if no content is inserted into the left_content slot</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftPanelType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSpecifies the behavior of the left sidebar\n",
                    "description": "<p>Specifies the behavior of the left sidebar</p>\n",
                    "line": 42,
                    "type": "SioSideMenuType",
                    "decorators": []
                },
                {
                    "name": "rightPanelMenuID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nmenu id code to use in the right sidebar. will be displayed as the default component if no content is inserted into the right_content slot\n",
                    "description": "<p>menu id code to use in the right sidebar. will be displayed as the default component if no content is inserted into the right_content slot</p>\n",
                    "line": 66,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rightPanelType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSpecifies the behavior of the Right sidebar\n",
                    "description": "<p>Specifies the behavior of the Right sidebar</p>\n",
                    "line": 50,
                    "type": "SioSideMenuType",
                    "decorators": []
                },
                {
                    "name": "tabDesktopPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow display tabbar in desktop mode\n",
                    "description": "<p>How display tabbar in desktop mode</p>\n",
                    "line": 85,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabMenuID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nmenu id code to use in the tabbar.\n",
                    "description": "<p>menu id code to use in the tabbar.</p>\n",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabMobilePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow display tabbar in mobile mode\n",
                    "description": "<p>How display tabbar in mobile mode</p>\n",
                    "line": 93,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe App Title\n",
                    "description": "<p>The App Title</p>\n",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "SioCoreAppComponentState.error"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "ionRouterOutlet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonRouterOutlet",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "IonRouterOutlet, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "loading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "SioCoreAppComponentState.loading"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "ngUnsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sioCoreAppComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreAppComponentState",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sioAppSplitPanelVisible",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 246,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, ViewChild, EnvironmentInjector } from '@angular/core';\nimport { SioCoreAppComponentState } from '../../store/index';\n\nimport { it } from '../../../i18n/it';\nimport { en } from '../../../i18n/en';\n\nimport { Select } from '@ngxs/store';\nimport { Observable, Subject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Platform, IonRouterOutlet } from '@ionic/angular';\nimport { App } from '@capacitor/app';\nimport {\n  SioCoreEnvironmentService,\n  SioCoreLoadingService,\n  SioCoreAlertService,\n  SioCoreLoggerService,\n} from '../../services';\n\nimport type { SioColorType, SioSideMenuType } from '../../types';\n\n@Component({\n  selector: 'sio-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class SioCoreAppComponent implements OnInit, OnDestroy {\n  private ngUnsubscribe = new Subject();\n\n  /**\n   * The App Title\n   */\n  @Input()\n  set title(value: string) {\n    this.sioCoreAppComponentState.SetTitle(value);\n  }\n\n  /**\n   * Specifies the behavior of the left sidebar\n   */\n  @Input()\n  set leftPanelType(value: SioSideMenuType) {\n    this.sioCoreAppComponentState.setLeftPanelType(value);\n  }\n\n  /**\n   * Specifies the behavior of the Right sidebar\n   */\n  @Input()\n  set rightPanelType(value: SioSideMenuType) {\n    this.sioCoreAppComponentState.setRightPanelType(value);\n  }\n\n  /**\n   * menu id code to use in the left sidebar. will be displayed as the default component if no content is inserted into the left_content slot\n   */\n  @Input()\n  set leftPanelMenuID(value: string) {\n    this.sioCoreAppComponentState.setLeftMenuID(value);\n  }\n\n  /**\n   * menu id code to use in the right sidebar. will be displayed as the default component if no content is inserted into the right_content slot\n   */\n  @Input()\n  set rightPanelMenuID(value: string) {\n    this.sioCoreAppComponentState.setRightMenuID(value);\n  }\n\n  /**\n   * menu id code to use in the tabbar.\n   */\n  @Input()\n  set tabMenuID(value: string) {\n    this.sioCoreAppComponentState.setTabMenuID(value);\n  }\n\n  @Input()\n  environmentInjector : EnvironmentInjector | undefined;\n\n  /**\n   * How display tabbar in desktop mode\n   */\n  @Input()\n  set tabDesktopPosition(value: string) {\n    this.sioCoreAppComponentState.setTabDesktop(value);\n  }\n\n  /**\n   * How display tabbar in mobile mode\n   */\n  @Input()\n  set tabMobilePosition(value: string) {\n    this.sioCoreAppComponentState.setTabMobile(value);\n  }\n\n  @Input() color: SioColorType;\n\n  @Select(SioCoreAppComponentState.loading)\n  loading$!: Observable<{ show: boolean; message: string }>;\n\n  @Select(SioCoreAppComponentState.error)\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  error$!: Observable<{ name: string; message: string; action: Function }>;\n  @ViewChild(IonRouterOutlet, { static: true })\n  ionRouterOutlet!: IonRouterOutlet;\n\n  constructor(\n    public sioCoreAppComponentState: SioCoreAppComponentState,\n    private platform: Platform,\n    private sioCoreLoadingService: SioCoreLoadingService,\n    private sioCoreAlertService: SioCoreAlertService,\n    private sioCoreEnvironmentService: SioCoreEnvironmentService,\n    private sioCoreLoggerService: SioCoreLoggerService,\n    private translateService: TranslateService,\n  ) {\n    this.sioCoreLoggerService.info(\n      `[sioCoreAppComponentState][constructor] Check config...`,\n    );\n    if (this.sioCoreEnvironmentService.config) {\n      this.sioCoreLoggerService.info(\n        `[sioCoreAppComponentState][constructor] Config found loading...`,\n        this.sioCoreEnvironmentService.config,\n      );\n      this.sioCoreAppComponentState.LoadConfig(\n        this.sioCoreEnvironmentService.config.app,\n      );\n    } else {\n      this.sioCoreLoggerService.warn(\n        '[sioCoreAppComponent][Constructor] No config in environment file',\n      );\n    }\n    //this.translateService.setTranslation('it', it, true);\n    //this.translateService.setTranslation('en', en, true);\n  }\n\n  //@Select(SioCoreAppComponentState.split)\n  //split$!: Observable<boolean>;\n\n  ngOnInit(): void {\n    (async () => {\n      this.sioCoreLoggerService.info('await for platform avaible...');\n      let platform = await this.platform.ready();\n\n      this.translateService.setTranslation('it', it, true);\n      this.translateService.setTranslation('en', en, true);\n\n      this.translateService.addLangs(\n        this.sioCoreEnvironmentService.config.app.language?.avaibles || [],\n      );\n      this.translateService.use(\n        this.sioCoreEnvironmentService.config.app.language?.default || 'en',\n      );\n      this.sioCoreLoggerService.info('Check platform...');\n      switch (platform) {\n        case 'dom':\n          platform = 'browser';\n          // eslint-disable-next-line no-case-declarations\n          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');\n          this.sioCoreAppComponentState.setDark(prefersDark.matches);\n          prefersDark.addEventListener('change', (mediaQuery) =>\n            this.sioCoreAppComponentState.setDark(mediaQuery.matches),\n          );\n          break;\n        case 'hybrid':\n        case 'cordova':\n          this.platform.backButton.subscribeWithPriority(-1, () => {\n            if (!this.ionRouterOutlet.canGoBack()) {\n              App.exitApp();\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.platform.keyboardDidShow.subscribe((ev: any) => {\n              const { keyboardHeight } = ev;\n              this.sioCoreLoggerService.debug(\n                '[sioCoreAppComponent][ngOnInit] raise keyboardDidShow event',\n                keyboardHeight,\n              );\n              // Do something with the keyboard height such as translating an input above the keyboard.\n            });\n\n            this.platform.keyboardDidHide.subscribe(() => {\n              this.sioCoreLoggerService.debug(\n                '[sioCoreAppComponent][ngOnInit] raise keyboardDidHide event',\n              );\n              // Move input back to original location\n            });\n          });\n          break;\n        default:\n          this.sioCoreAppComponentState.throwError(\n            'sio',\n            'UNKNOW_PLATFORM : ' + platform,\n          );\n      }\n      this.sioCoreLoggerService.debug(\n        `[sioCoreAppComponent][ngOnInit] - Platform ${platform} detected`,\n      );\n      await this.sioCoreLoadingService.create();\n      this.platform.pause.subscribe(async () => {\n        this.sioCoreLoggerService.debug(\n          '[sioCoreAppComponent][ngOnInit] - Pause event detected',\n        );\n      });\n      this.platform.resize.subscribe(async () => {\n        this.sioCoreLoggerService.debug(\n          '[sioCoreAppComponent][ngOnInit] - Resize event detected',\n        );\n      });\n      this.platform.resume.subscribe(async () => {\n        this.sioCoreLoggerService.debug(\n          '[sioCoreAppComponent][ngOnInit] - Resume event detected',\n        );\n      });\n      this.sioCoreLoggerService.debug(\n        '[sioCoreAppComponent][ngOnInit] - Subscribe for Errors',\n      );\n      this.error$.subscribe(async (value) => {\n        if (value && value.message) {\n          const alert: unknown = await this.sioCoreAlertService.show(\n            value.name,\n            value.message,\n            value.action,\n          );\n          this.sioCoreLoggerService.debug(\n            '[sioCoreAppComponent][ngOnInit] - Show Alert',\n            alert,\n          );\n        }\n      });\n      this.sioCoreLoggerService.debug(\n        '[sioCoreAppComponent][ngOnInit] - Subscribe for Loader',\n      );\n      this.loading$.subscribe((value) => {\n        if (value.show) this.sioCoreLoadingService.show(value.message);\n        else this.sioCoreLoadingService.hide();\n      });\n      this.sioCoreLoggerService.debug(\n        '[sioCoreAppComponent][ngOnInit] - Platform Ready',\n        this.platform,\n      );\n    })();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sioAppSplitPanelVisible(e: any) {\n    this.sioCoreLoggerService.debug(\n      '[sioAppCoreComponent][sioAppSPlitPanleVisible] - Split Panel State Changed',\n      e.detail.visible,\n    );\n    this.sioCoreAppComponentState.setSplit(e.detail.visible);\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next(null);\n    this.ngUnsubscribe.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host[color='primary'] {\n  --sio-toolbar-color: var(--ion-color-primary);\n  --sio-left-menu-header-color: var(--ion-color-primary);\n  --sio-left-menu-content-color: var(--ion-color-primary);\n  --sio-left-menu-footer-color: var(--ion-color-primary);\n  --sio-right-menu-header-color: var(--ion-color-primary);\n  --sio-right-menu-content-color: var(--ion-color-primary);\n  --sio-right-menu-footer-color: var(--ion-color-primary);\n}\n\n:host[color='danger'] {\n  --sio-toolbar-color: var(--ion-color-danger);\n  --sio-left-menu-header-color: var(--ion-color-danger);\n  --sio-left-menu-footer-color: var(--ion-color-danger);\n  --sio-right-menu-header-color: var(--ion-color-danger);\n  --sio-right-menu-footer-color: var(--ion-color-danger);\n}\n\n:host {\n  ion-split-pane {\n    --side-min-width: 300px;\n    --side-width: 300px;\n    --side-max-width: 300px;\n    --border: 0px 0px 0px 0px;\n    \n    ion-menu[side='start'] {\n      --background: var(--sio-left-menu-content-color);\n      ion-header {\n        --background: var(--sio-left-menu-header-color);\n        ion-toolbar {\n          --background: var(--sio-left-menu-header-color);\n        }\n      }\n      \n      ion-content {\n        --background: var(--sio-left-menu-content-color);\n      }\n      ion-footer {\n        --background: var(--sio-left-menu-footer-color);\n        ion-toolbar {\n          --background: var(--sio-left-menu-footer-color);\n          ion-item {\n            --background: var(--sio-left-menu-footer-color);\n          }\n        }\n      }\n    }\n\n    ion-menu[side='end'] {\n      --background: var(--sio-right-menu-content-color);\n      ion-header {\n        --background: var(--sio-right-menu-header-color);\n        ion-toolbar {\n          --background: var(--sio-right-menu-header-color);\n        }\n      }\n      ion-content {\n        --background: var(--sio-right-menu-content-color);\n      }\n      ion-footer {\n        --background: var(--sio-right-menu-footer-color);\n        ion-toolbar {\n          --background: var(--sio-right-menu-footer-color);\n          ion-item {\n            --background: var(--sio-right-menu-footer-color);\n          }\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "platform",
                        "type": "Platform",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreLoadingService",
                        "type": "SioCoreLoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreAlertService",
                        "type": "SioCoreAlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreEnvironmentService",
                        "type": "SioCoreEnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 107,
                "jsdoctags": [
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "platform",
                        "type": "Platform",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreLoadingService",
                        "type": "SioCoreLoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreAlertService",
                        "type": "SioCoreAlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreEnvironmentService",
                        "type": "SioCoreEnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "title": {
                    "name": "title",
                    "setSignature": {
                        "name": "title",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "rawdescription": "\n\nThe App Title\n",
                        "description": "<p>The App Title</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "leftPanelType": {
                    "name": "leftPanelType",
                    "setSignature": {
                        "name": "leftPanelType",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "SioSideMenuType",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "rawdescription": "\n\nSpecifies the behavior of the left sidebar\n",
                        "description": "<p>Specifies the behavior of the left sidebar</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "SioSideMenuType",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "rightPanelType": {
                    "name": "rightPanelType",
                    "setSignature": {
                        "name": "rightPanelType",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "SioSideMenuType",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "rawdescription": "\n\nSpecifies the behavior of the Right sidebar\n",
                        "description": "<p>Specifies the behavior of the Right sidebar</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "SioSideMenuType",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "leftPanelMenuID": {
                    "name": "leftPanelMenuID",
                    "setSignature": {
                        "name": "leftPanelMenuID",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 58,
                        "rawdescription": "\n\nmenu id code to use in the left sidebar. will be displayed as the default component if no content is inserted into the left_content slot\n",
                        "description": "<p>menu id code to use in the left sidebar. will be displayed as the default component if no content is inserted into the left_content slot</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "rightPanelMenuID": {
                    "name": "rightPanelMenuID",
                    "setSignature": {
                        "name": "rightPanelMenuID",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 66,
                        "rawdescription": "\n\nmenu id code to use in the right sidebar. will be displayed as the default component if no content is inserted into the right_content slot\n",
                        "description": "<p>menu id code to use in the right sidebar. will be displayed as the default component if no content is inserted into the right_content slot</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "tabMenuID": {
                    "name": "tabMenuID",
                    "setSignature": {
                        "name": "tabMenuID",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 74,
                        "rawdescription": "\n\nmenu id code to use in the tabbar.\n",
                        "description": "<p>menu id code to use in the tabbar.</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "tabDesktopPosition": {
                    "name": "tabDesktopPosition",
                    "setSignature": {
                        "name": "tabDesktopPosition",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 85,
                        "rawdescription": "\n\nHow display tabbar in desktop mode\n",
                        "description": "<p>How display tabbar in desktop mode</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "tabMobilePosition": {
                    "name": "tabMobilePosition",
                    "setSignature": {
                        "name": "tabMobilePosition",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "rawdescription": "\n\nHow display tabbar in mobile mode\n",
                        "description": "<p>How display tabbar in mobile mode</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<ion-app>\n  <div\n    *ngIf=\"\n      (this.sioCoreAppComponentState.leftPanelType === 'none' &&\n        this.sioCoreAppComponentState.rightPanelType === 'none') ||\n        this.sioCoreAppComponentState.full;\n      then blank;\n      else split\n    \"\n  ></div>\n  <ng-template #split>\n    <ion-split-pane\n      when=\"lg\"\n      contentId=\"main-content\"\n      (ionSplitPaneVisible)=\"sioAppSplitPanelVisible($event)\"\n    >\n      <ion-menu\n        contentId=\"main-content\"\n        side=\"start\"\n        [type]=\"\n          this.sioCoreAppComponentState.leftPanelType !== 'toggle'\n            ? this.sioCoreAppComponentState.leftPanelType\n            : 'push'\n        \"\n        [swipeGesture]=\"\n          this.sioCoreAppComponentState.leftPanelType !== 'toggle'\n        \"\n        [disabled]=\"this.sioCoreAppComponentState.leftPanelType === 'none'\"\n      >\n        <ion-header class=\"ion-no-border\">\n          <ion-toolbar [color]=\"this.color\">\n            <div #left_header>\n              <ng-content select=\"[slot='left_header']\"></ng-content>\n            </div>\n            <ng-container *ngIf=\"!left_header.hasChildNodes()\">\n              <ion-title>{{\n                (this.sioCoreAppComponentState.state$ | async)?.title\n              }}</ion-title>\n            </ng-container>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content>\n          <sio-menu\n            *ngIf=\"\n              this.sioCoreAppComponentState.tabMenuID &&\n              this.sioCoreAppComponentState.tabDesktopPosition === 'left' &&\n              this.sioCoreAppComponentState.split\n            \"\n            id=\"tab\"\n            [color]=\"this.color\"\n          >\n          </sio-menu>\n          <div #left_content>\n            <ng-content select=\"[slot='left_content']\"></ng-content>\n          </div>\n          <ng-container *ngIf=\"!left_content.hasChildNodes()\">\n            <sio-menu\n              *ngIf=\"this.sioCoreAppComponentState.leftMenuID\"\n              [menuID]=\"this.sioCoreAppComponentState.leftMenuID\"\n              [color]=\"this.color\"\n            ></sio-menu>\n          </ng-container>\n        </ion-content>\n        <ion-footer class=\"ion-no-border\">\n          <div #left_footer>\n            <ng-content select=\"[slot='left_footer']\"></ng-content>\n          </div>\n          <ng-container *ngIf=\"!left_footer.hasChildNodes()\">\n            <ion-toolbar class=\"ion-no-border\" [color]=\"this.color\">\n              <ion-item lines=\"none\" [color]=\"this.color\"\n                ><ion-label>powered by Sio</ion-label></ion-item\n              >\n              <ion-buttons slot=\"end\">\n                <ion-button\n                  href=\"https://github.com/silicia-apps/sio\"\n                  target=\"_blank\"\n                  shape=\"round\"\n                  fill=\"clear\"\n                >\n                  <ion-icon slot=\"start\" name=\"logo-github\"></ion-icon>\n                </ion-button>\n              </ion-buttons>\n            </ion-toolbar>\n          </ng-container>\n        </ion-footer>\n      </ion-menu>\n      <ion-menu\n        [disabled]=\"this.sioCoreAppComponentState.rightPanelType === 'none'\"\n        contentId=\"main-content\"\n        side=\"end\"\n        [type]=\"this.sioCoreAppComponentState.rightPanelType\"\n        [swipeGesture]=\"\n          this.sioCoreAppComponentState.rightPanelType !== 'toggle'\n        \"\n      >\n        <ion-header class=\"ion-no-border\">\n          <ion-toolbar [color]=\"this.color\">\n            <div #right_header>\n              <ng-content select=\"[slot='right_header']\"></ng-content>\n            </div>\n            <ng-container *ngIf=\"!right_header.hasChildNodes()\">\n              <ion-title>{{\n                (this.sioCoreAppComponentState.state$ | async)?.title\n              }}</ion-title>\n            </ng-container>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content [color]=\"this.color\">\n          <sio-menu\n            *ngIf=\"\n              this.sioCoreAppComponentState.tabMenuID &&\n              this.sioCoreAppComponentState.tabDesktopPosition === 'right' &&\n              this.sioCoreAppComponentState.split\n            \"\n            id=\"tab\"\n            [color]=\"this.color\"\n          ></sio-menu>\n          <div #right_content>\n            <ng-content select=\"[slot='right_content']\"></ng-content>\n          </div>\n          <ng-container *ngIf=\"!right_content.hasChildNodes()\">\n            <sio-menu\n              *ngIf=\"this.sioCoreAppComponentState.rightMenuID\"\n              [menuID]=\"this.sioCoreAppComponentState.rightMenuID\"\n              [color]=\"this.color\"\n            ></sio-menu>\n          </ng-container>\n        </ion-content>\n        <ion-footer class=\"ion-no-border\">\n          <div #right_footer>\n            <ng-content select=\"[slot='right_footer']\"></ng-content>\n          </div>\n          <ng-container *ngIf=\"!right_footer.hasChildNodes()\">\n            <ion-toolbar class=\"ion-no-border\" [color]=\"this.color\">\n              <sio-dark-mode-toggle></sio-dark-mode-toggle>\n            </ion-toolbar>\n          </ng-container>\n        </ion-footer>\n      </ion-menu>\n      <ion-router-outlet [environmentInjector]=\"this.environmentInjector\" id=\"main-content\">\n        <ng-content></ng-content>\n        <sio-tab\n          *ngIf=\"this.sioCoreAppComponentState.tabMenuID\"\n          [tabID]=\"this.sioCoreAppComponentState.tabMenuID\"\n          [position]=\"\n            this.sioCoreAppComponentState.split\n              ? this.sioCoreAppComponentState.tabDesktopPosition\n              : this.sioCoreAppComponentState.tabMobilePosition\n          \"\n          [color]=\"this.color\"\n        ></sio-tab>\n      </ion-router-outlet>\n    </ion-split-pane>\n  </ng-template>\n  <ng-template #blank>\n    <ion-router-outlet [environmentInjector]=\"environmentInjector\" id=\"main-content\">\n      <sio-menu\n        *ngIf=\"\n          this.sioCoreAppComponentState.tabMenuID &&\n          this.sioCoreAppComponentState.full\n        \"\n        menuID=\"tab\"\n        position=\"bottom\"\n        [color]=\"this.color\"\n      ></sio-menu>\n      <ng-content></ng-content>\n    </ion-router-outlet>\n  </ng-template>\n</ion-app>\n"
        },
        {
            "name": "SioCoreButtonComponent",
            "id": "component-SioCoreButtonComponent-ad4145be51c5553fad9c68abf8031987a978e99690086a8a245d3013e145bf74efa192c4571c45728b6a1de8eab0d4a6540f9e5426da5bfce5116b45b5f72d9b",
            "file": "libs/core/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "block",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "display_icon",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"left\" | \"right\" | \"only\"",
                    "decorators": []
                },
                {
                    "name": "full",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "round",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "\"default\" | \"large\" | \"small\" | undefined",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"button\" | \"fab\"",
                    "decorators": []
                },
                {
                    "name": "upload",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "outputsClass": [
                {
                    "name": "Click",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SioColorType } from '../../types';\nimport { InputBoolean } from '@angular-ru/cdk/typings';\nimport { AttributeBoolean } from '@angular-ru/cdk/decorators';\nimport { SioCoreLoggerService } from '../../services';\n\nimport { FilePicker } from '@capawesome/capacitor-file-picker';\n\n@Component({\n  selector: 'sio-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  standalone: false,\n})\nexport class SioCoreButtonComponent {\n  @Input() public color: SioColorType;\n\n  @Input() public type: 'button' | 'fab' = 'button';\n\n  @AttributeBoolean()\n  @Input()\n  public round: InputBoolean;\n\n  @AttributeBoolean()\n  @Input()\n  public upload: InputBoolean = false;\n\n  @Input() public size: 'default' | 'large' | 'small' | undefined = undefined;\n\n  @Input() public display_icon: 'left' | 'right' | 'only' = 'left';\n\n  @Input() public icon: string | undefined = undefined;\n\n  @AttributeBoolean()\n  @Input()\n  public full: InputBoolean = false;\n\n  @AttributeBoolean()\n  @Input()\n  public block: InputBoolean = false;\n\n  @AttributeBoolean()\n  @Input()\n  public disabled: InputBoolean = false;\n\n  @Output() Click = new EventEmitter();\n\n  constructor(private sioCoreLoggerService: SioCoreLoggerService) {\n    this.sioCoreLoggerService.debug('[SioCoreButtonComponent][constructor]');\n  }\n\n  async onClick() {\n    if (this.upload) {\n      const { files } = await FilePicker.pickFiles({ readData: true });\n      if (files) this.Click.emit(files);\n    } else {\n      this.Click.emit([]);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div *ngIf=\"this.type === 'fab'; then fab; else default\"></div>\n<ng-template #default>\n  <ion-button\n    [color]=\"this.color\"\n    [disabled]=\"this.disabled\"\n    [shape]=\"this.round ? 'round' : undefined\"\n    [expand]=\"this.full ? 'full' : this.block ? 'block' : undefined\"\n    [size]=\"this.size\"\n    (click)=\"onClick()\"\n  >\n    <ion-icon\n      *ngIf=\"this.icon\"\n      [name]=\"this.icon\"\n      [slot]=\"(this.display_icon === 'left')?'start':(this.display_icon === 'right')?'end':(this.display_icon === 'only')?'icon-only':'left'\"\n    ></ion-icon>\n    <ng-content *ngIf=\"this.display_icon !== 'only'\"></ng-content>\n  </ion-button>\n</ng-template>\n<ng-template #fab>\n  <ion-fab-button [color]=\"this.color\" [disabled]=\"this.disabled\" [size]=\"this.size\" (click)=\"onClick()\">\n    <ion-icon [name]=\"this.icon\"></ion-icon>\n  </ion-fab-button>\n</ng-template>\n"
        },
        {
            "name": "SioCoreCardComponent",
            "id": "component-SioCoreCardComponent-ecd2072c791a4280b315e702471d674d7559a97c9b561d1f7f73f57a7121b2b64c0efc14e63f8a65840c2e1a560adecb941cd16ed46566d2c6e3514238282091",
            "file": "libs/core/src/lib/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "accordion",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "altImg",
                    "defaultValue": "'Alternative Text for image'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "img",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "lines",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"full\" | \"inset\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'compact'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"compact\" | \"inset\"",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toggleIcon",
                    "defaultValue": "'chevron-down-outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toggleIconSlot",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'standard'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "\"standard\" | \"media\" | \"accordion\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "test",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { SioColorType } from '../../types';\nimport { AttributeBoolean } from '@angular-ru/cdk/decorators';\nimport { InputBoolean } from '@angular-ru/cdk/typings';\n\n@Component({\n  selector: 'sio-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class SioCoreCardComponent {\n  @Input() public disabled = false;\n\n  @AttributeBoolean()\n  @Input() public accordion: InputBoolean = false;\n  @Input() public lines: 'full' | 'inset' | 'none' = 'none';\n  @Input() public value = '';\n  //@Input() public shape: 'line' | 'dot' | 'rounded' = 'line';\n  @Input() public position: 'left' | 'right' = 'left';\n  @Input() public color: SioColorType;\n  @Input() public toggleIconSlot: 'start' | 'end' = 'end';\n  @Input() public toggleIcon = 'chevron-down-outline';\n  @Input() public shape: 'compact' | 'inset' = 'compact';\n  @Input() public title = '';\n  @Input() public subtitle = '';\n  @Input() public img: string | null = null;\n  @Input() public altImg = 'Alternative Text for image';\n  @Input() public type: 'standard' | 'media' | 'accordion' = 'standard';\n\n  test() {\n    console.log('test');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-card-header.ios {\n  display: flex;\n  flex-flow: column-reverse;\n}\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-card [disabled]=\"this.disabled\">\n  <ion-img *ngIf=\"this.img\" [alt]=\"this.altImg\" [src]=\"this.img\" />\n  <div *ngIf=\"this.type === 'accordion'; then accordion; else default\"></div>\n  <ng-template #accordion>\n    <ion-accordion-group [value]=\"this.value\" (ionChange)=\"this.test()\">\n      <ion-accordion\n        *ngIf=\"this.accordion\"\n        value=\"open\"\n        [toggleIcon]=\"this.toggleIcon\"\n        [toggleIconSlot]=\"this.toggleIconSlot\"\n      >\n        <ion-item [color]=\"this.color\" slot=\"header\">\n          <ion-card-header [color]=\"this.color\">\n            <div #header>\n              <ng-content select=\"[slot='header']\"></ng-content>\n            </div>\n            <ng-container *ngIf=\"!header.hasChildNodes()\">\n              <ion-card-title>{{ this.title | translate }}</ion-card-title>\n              <ion-card-subtitle>{{\n                this.subtitle | translate\n              }}</ion-card-subtitle>\n            </ng-container>\n          </ion-card-header>\n        </ion-item>\n        <ion-card-content class=\"ion-padding\" slot=\"content\">\n          <ng-content></ng-content>\n        </ion-card-content>\n      </ion-accordion>\n    </ion-accordion-group>\n  </ng-template>\n  <ng-template #default>\n    <ion-card-header [color]=\"this.color\">\n      <div #header><ng-content select=\"[slot='header']\"></ng-content></div>\n      <ng-container *ngIf=\"!header.hasChildNodes()\">\n        <ion-card-title>{{ this.title | translate }}</ion-card-title>\n        <ion-card-subtitle>{{ this.subtitle | translate }}</ion-card-subtitle>\n      </ng-container>\n    </ion-card-header>\n    <ion-card-content class=\"ion-padding\">\n      <ng-content></ng-content>\n    </ion-card-content>\n  </ng-template>\n</ion-card>\n"
        },
        {
            "name": "SioCoreDarkModeToggleComponent",
            "id": "component-SioCoreDarkModeToggleComponent-345d62635a62a298ee4b9c92e92b1c61b83d484c036f05465651bd9ba523c2b35a4c232b317e429a1cb02a5c82ac92218e249f488b80e297e2612f79ec334b41",
            "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-darkmode-toggle",
            "styleUrls": [
                "./darkmode-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./darkmode-toggle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "caption",
                    "defaultValue": "'L_DARKMODE'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'sunny'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"default\" | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "darkmode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "SioCoreAppComponentState.darkmode"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "ionToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonToggle",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'darkmode_toggle', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "label",
                    "defaultValue": "'L_DARKMODE'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sioCoreAppComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreAppComponentState",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { IonToggle } from '@ionic/angular';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Loggable, SioCoreLoggerService } from '../../services';\nimport { SioColorType } from '../../types';\nimport { SioCoreAppComponentState } from '../../store';\n\n@Loggable()\n@Component({\n  selector: 'sio-darkmode-toggle',\n  templateUrl: './darkmode-toggle.component.html',\n  styleUrls: ['./darkmode-toggle.component.scss'],\n})\nexport class SioCoreDarkModeToggleComponent implements OnInit {\n  @Input() public caption = 'L_DARKMODE';\n  @Input() public style: 'default' | undefined = undefined;\n  @Input() public color: SioColorType;\n  @Input() public icon = 'sunny';\n\n  public label = 'L_DARKMODE';\n\n  @Select(SioCoreAppComponentState.darkmode) darkmode$!: Observable<boolean>; \n\n  @ViewChild('darkmode_toggle', { static: true }) ionToggle!: IonToggle;\n\n  constructor(\n    private sioCoreLoggerService: SioCoreLoggerService,\n    public sioCoreAppComponentState: SioCoreAppComponentState\n  ) {}\n\n  ngOnInit(): void {\n    this.darkmode$.subscribe((value) => {\n      document.body.classList.toggle('dark', value);\n      this.ionToggle.checked = value;\n      this.label = this.caption + ((value)?'_ON':'_OFF');   \n      this.icon = (value)?'moon':'sunny'; \n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public onChange(event: any) {\n    this.sioCoreLoggerService.debug('[SioCoreDarkModeToggleComponent][onChange] - Switch style');\n    if (event.detail.checked) {\n      this.sioCoreLoggerService.debug('[SioCoreDarkModeToggleComponent][onChange] - New Style is Dark Mode');\n      this.sioCoreAppComponentState.setDark(true);\n    } else {\n      this.sioCoreLoggerService.debug('[SioCoreDarkModeToggleComponent][onChange] - New Style is Light Mode');\n      this.sioCoreAppComponentState.setDark(false);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./darkmode-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item lines=\"none\" button color=\"primary\">\n  <sio-icon [name]=\"this.icon\" slot=\"start\"></sio-icon>\n  <ion-toggle #darkmode_toggle (ionChange)=\"this.onChange($event)\" slot=\"end\" color=\"warning\"></ion-toggle>\n  <label>{{ this.label | translate }}</label>\n</ion-item>"
        },
        {
            "name": "SioCoreFormComponent",
            "id": "component-SioCoreFormComponent-87e00110a313711907dc66c39d9600fe88a36c5d6510554279c9f45cdfbbd06c20ce506faea69cd7c164f80d7a22c46afc68ec26e636dcfaefacffa5ec678d13",
            "file": "libs/core/src/lib/components/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'dark'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "SioCoreFormComponentState",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "send",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Loggable, SioCoreLoggerService } from '../../services/logger';\nimport {\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { SioCoreFormComponentState } from './store/form.state';\nimport { SioColorType } from '../../types';\n\n@Loggable()\n@Component({\n  selector: 'sio-form',\n  templateUrl: './form.component.html',\n})\nexport class SioCoreFormComponent implements OnInit {\n  @Input() public cancel = false;\n  @Input() public state!: SioCoreFormComponentState;\n  @Input() public color: SioColorType = 'dark';\n\n  @Output() send = new EventEmitter();\n\n  public form!: UntypedFormGroup;\n\n  constructor(private sioCoreLoggerService: SioCoreLoggerService) {\n    this.sioCoreLoggerService.debug(`[SioCoreFormComponent][constructor]`);\n  }\n\n  ngOnInit(): void {\n    this.sioCoreLoggerService.debug(`[SioCoreFormComponent][ngOnInit]`);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const group: any = {};\n    if (this.state.layout) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.state.layout.forEach((field:any) => {\n        this.sioCoreLoggerService.debug(`[SioCoreFormComponent][ngOnInit] add field`);\n        const validator = [];\n        if (field.required) validator.push(Validators.required);\n        if (field.type === 'email') validator.push(Validators.email); //SioEmailValidator);\n        if (field.type === 'tel')\n          validator.push(Validators.pattern('^[0-9]+$'));\n        group[field.name] = new UntypedFormControl(field.value, validator);\n      });\n      this.form = new UntypedFormGroup(group);\n    }\n  }\n\n  public async onSubmit() {\n    this.sioCoreLoggerService.info(\n      '[SioCoreFormComponent][onSubmit] - form submitted'\n    );\n    this.send.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form\n  *ngIf=\"(this.state.state$ | async)?.layout\"\n  ngxsForm=\"{{ this.state.name }}.data\"\n  [formGroup]=\"this.form\"\n  (ngSubmit)=\"this.onSubmit()\"\n>\n  <div *ngFor=\"let item of (this.state.state$ | async)?.layout\">\n    <sio-input\n      [label]=\"item.label\"\n      [name]=\"item.name\"\n      [type]=\"item.type\"\n      [formControlName]=\"item.name\"\n      [color]=\"this.color\"\n    ></sio-input>\n    <br />\n  </div>\n  <ion-button\n    size=\"large\"\n    expand=\"block\"\n    color=\"primary\"\n    type=\"submit\"\n    [disabled]=\"!this.state.valid\"\n  >\n    {{ 'SUBMIT' | translate }}\n  </ion-button>\n  <ion-button\n    *ngIf=\"this.cancel\"\n    expand=\"block\"\n    color=\"danger\"\n    (click)=\"this.state.resetForm()\"\n  >\n    {{ 'RESET' | translate }}\n  </ion-button>\n</form>\n"
        },
        {
            "name": "SioCoreHeaderComponent",
            "id": "component-SioCoreHeaderComponent-9945fd51fdafebc05324d00b791a70307f39746b1cb58f0f1908ab5ff4d435f756ab4956793fb706ded7414e9e02410079070d5a913708f834b354fd0ff9f19d",
            "file": "libs/core/src/lib/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "back",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "fullmode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toolbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { SioCoreLoggerService } from '../../services';\nimport { SioCoreAppComponentState } from '../app/store';\n\nimport { AttributeBoolean } from '@angular-ru/cdk/decorators';\nimport { InputBoolean } from '@angular-ru/cdk/typings';\n\nimport { SioColorType } from '../../types';\n\n@Component({\n  selector: 'sio-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class SioCoreHeaderComponent implements OnInit {\n  \n  @Input() title: string;\n  //@Input() set title(value: string) { this.sioCorePageComponentState.setTitle(value) };\n  @Input() color: SioColorType;\n  @AttributeBoolean() @Input() toolbar : InputBoolean;\n  @AttributeBoolean() @Input() menu: InputBoolean;\n  @AttributeBoolean() @Input() back: InputBoolean;\n  @AttributeBoolean() @Input() search: InputBoolean\n  @AttributeBoolean() @Input() fullmode: InputBoolean;\n\n  constructor(\n    private sioLoggerService: SioCoreLoggerService,\n    private sioCoreAppComponentState: SioCoreAppComponentState,\n  ) {\n    this.toolbar = true;\n    this.title = 'T_PAGE';\n    this.menu = false;\n    this.back = false;\n    this.search = false\n  }\n\n  ngOnInit(): void {\n    this.sioLoggerService.debug(`[sioCoreHeaderComponent][ngOnInit]`);\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  \n}",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header *ngIf=\"this.toolbar && !this.fullmode\" collapse=\"fade\" [translucent]=\"true\" class=\"ion-no-border\">\n  <ion-toolbar [color]=\"this.color\">\n    <ion-buttons slot=\"start\">\n      <ng-container>\n        <ion-menu-button *ngIf=\"this.menu\"></ion-menu-button>\n        <ion-back-button *ngIf=\"this.back\"></ion-back-button>\n      </ng-container>\n    </ion-buttons>\n    <ion-title>{{ this.title| translate }}</ion-title>\n    <ion-buttons slot=\"end\">\n      <ng-content select=\"[slot='end']\"> </ng-content>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>"
        },
        {
            "name": "SioCoreIconComponent",
            "id": "component-SioCoreIconComponent-119cef19b6100c7b06bec98935c89fffb856dd3824070f59059d7d8227963e5493e37b7dc2f52ac6bcc1ba46ba1245dffa866c94a2d566901c5b9ca0c1db95c8",
            "file": "libs/core/src/lib/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "only",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"small\" | \"large\" | undefined",
                    "decorators": []
                },
                {
                    "name": "slot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"start\" | \"end\" | undefined",
                    "decorators": []
                },
                {
                    "name": "url",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { SioColorType } from '../../types';\nimport { SioCoreLoggerService } from '../../services/logger';\n\n@Component({\n  selector: 'sio-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class SioCoreIconComponent {\n  @Input() public color: SioColorType;\n  @Input() public slot : 'start' | 'end' | undefined;\n  @Input() public name: string | undefined = undefined;\n  @Input() public url: string | undefined = undefined;\n  @Input() public size: 'small' | 'large' | undefined = undefined;\n  @Input() public only = false;\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(\n    private sioLoggerService: SioCoreLoggerService,\n  ) {\n    this.sioLoggerService.debug('[SioCoreIconComponent] Create Icon' + this.name, this.name);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    --silicia-icon-color : var(--ion-color-primary-contrast);\n\n    ion-icon {\n        color: --silicia-icon-color;\n    }\n}",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ion-icon *ngIf=\"this.slot === 'start'\" slot=\"start\" [name]=\"this.name\" [ios]=\"this.name+ '-outline'\" [md]=\"this.name+ '-sharp'\" [color]=\"this.color\" [size]=\"this.size\"></ion-icon>\n<ion-icon *ngIf=\"this.slot === 'end'\" slot=\"end\" [name]=\"this.name\" [ios]=\"this.name+ '-outline'\" [md]=\"this.name+ '-sharp'\" [color]=\"this.color\" [size]=\"this.size\"></ion-icon>"
        },
        {
            "name": "SioCoreInputComponent",
            "id": "component-SioCoreInputComponent-e0d82a291f4651b3e3a18b37f1581c97668a5285c5321a1e929ae7bac374718637df016136f54b6762b57815860e7f54185e61f014e411be3fbfef52336bc651",
            "file": "libs/core/src/lib/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocapitalize",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "\"on\" | \"off\"",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "\"on\" | \"off\"",
                    "decorators": []
                },
                {
                    "name": "autocorrect",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "\"on\" | \"off\"",
                    "decorators": []
                },
                {
                    "name": "autofocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "clearInput",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "clearOnEdit",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "debounce",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "\"outline\" | \"solid\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "inputMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"file\" | \"url\" | undefined",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | null | undefined",
                    "decorators": []
                },
                {
                    "name": "lines",
                    "defaultValue": "'full'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "\"full\" | \"inset\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'floating'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "\"stacked\" | \"fixed\" | \"floating\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"file\" | \"week\" | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\" | \"file\" | undefined",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onChangeCallback",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 154,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouchedCallback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | undefined",
                    "optional": false,
                    "description": "",
                    "line": 152,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | boolean | sioStorageFileInterface[] | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "SioCoreFormComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreFormComponentState",
                    "optional": false,
                    "description": "",
                    "line": 157,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "blur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pickFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "newVal",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newVal",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Optional } from '@angular/core';\n\nimport { NgControl } from '@angular/forms';\nimport { SioCoreFormComponentState } from '../form/store/form.state';\n\nimport { FilePicker } from '@capawesome/capacitor-file-picker';\nimport { SioCoreLoggerService } from '../../services';\nimport { sioStorageFileInterface } from '../../interfaces';\n\n@Component({\n  selector: 'sio-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class SioCoreInputComponent implements OnInit {\n  private pValue: string | number | boolean | sioStorageFileInterface[] | null | undefined;\n  public _type:\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'\n    | 'file'\n    | undefined;\n  private _name = '';\n  private _label = '';\n\n  @Input() set label(value: string | null | undefined) {\n    this._label = <string>value;\n  }\n\n  public get label(): string {\n    return this._label;\n  }\n\n  @Input() public set name(value: string) {\n    if (this.label === undefined) {\n      this._label = `LABEL_${value?.toUpperCase()}`;\n    }\n    this._name = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  @Input() public position: 'stacked' | 'fixed' | 'floating' = 'floating';\n  @Input() public fill: 'outline' | 'solid' | 'none' = 'outline';\n  @Input() public autocapitalize: 'on' | 'off' = 'off';\n  @Input() public autocomplete: 'on' | 'off' = 'off';\n  @Input() public autocorrect: 'on' | 'off' = 'off';\n  @Input() public autofocus = false;\n  @Input() public clearInput = false;\n  @Input() public clearOnEdit: boolean | undefined = undefined;\n  @Input() public color: string | undefined = undefined;\n  @Input() public debounce = 0;\n  @Input() public disabled = false;\n  @Input() public lines: 'full' | 'inset' | 'none' = 'full';\n  @Input() public inputMode:\n    | 'decimal'\n    | 'email'\n    | 'none'\n    | 'numeric'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'file'\n    | 'url'\n    | undefined;\n\n  public get invalid(): boolean {\n    return this.control ? <boolean>this.control.invalid : false;\n  }\n\n  public get dirty(): boolean {\n    return this.control ? <boolean>this.control.dirty : false;\n  }\n\n  public get error(): unknown {\n    return this.control.errors;\n  }\n\n  @Input()\n  public set type(\n    value:\n      | 'date'\n      | 'datetime-local'\n      | 'email'\n      | 'month'\n      | 'number'\n      | 'password'\n      | 'search'\n      | 'tel'\n      | 'text'\n      | 'time'\n      | 'url'\n      | 'file'\n      | 'week'\n      | undefined,\n  ) {\n    if (!this.inputMode) {\n      switch (value) {\n        case 'number':\n          this.inputMode = 'numeric';\n          break;\n        case 'email':\n          this.inputMode = 'email';\n          break;\n        case 'tel':\n          this.inputMode = 'tel';\n          break;\n        case 'search':\n          this.inputMode = 'search';\n          break;\n        case 'url':\n          this.inputMode = 'url';\n          break;\n        case 'text':\n        case 'password':\n          this.inputMode = 'text';\n          break;\n        default:\n          this.inputMode = 'none';\n      }\n    }\n    this._type = value;\n  }\n\n  get valueInput(): string | number | boolean | sioStorageFileInterface[] | null | undefined {\n    return this.pValue;\n  }\n\n  set valueInput(newValue: string | number | boolean | sioStorageFileInterface[] | null) {\n    if (newValue !== this.pValue) {\n      this.pValue = newValue;\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.pValue);\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private onTouchedCallback: (() => {}) | undefined;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private onChangeCallback = (_: any) => {};\n\n  constructor(\n    public SioCoreFormComponentState: SioCoreFormComponentState,\n    private sioCoreLoggerService: SioCoreLoggerService,\n    @Optional() private control: NgControl,\n  ) {\n    this.label = 'LABEL_';\n    if (this.control) {\n      this.control.valueAccessor = this;\n    }\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\n  ngOnInit() {}\n\n  writeValue(newVal: any): void {\n    if (newVal !== undefined && newVal !== this.pValue) {\n      this.pValue = newVal;\n    }\n  }\n\n  blur() {\n    if (this.onTouchedCallback) {\n      this.onTouchedCallback();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  async pickFile() {\n    const { files } = await FilePicker.pickFiles({ readData: true });\n    this.label = files[0].name;\n    this.valueInput = files;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  ion-text {\n    text-align: left important;\n  }\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "SioCoreFormComponentState",
                        "type": "SioCoreFormComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 154,
                "jsdoctags": [
                    {
                        "name": "SioCoreFormComponentState",
                        "type": "SioCoreFormComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "label": {
                    "name": "label",
                    "setSignature": {
                        "name": "label",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | null | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 37,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | null | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "label",
                        "type": "string",
                        "returnType": "string",
                        "line": 41
                    }
                },
                "name": {
                    "name": "name",
                    "setSignature": {
                        "name": "name",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 45,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "name",
                        "type": "string",
                        "returnType": "string",
                        "line": 52
                    }
                },
                "invalid": {
                    "name": "invalid",
                    "getSignature": {
                        "name": "invalid",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 80
                    }
                },
                "dirty": {
                    "name": "dirty",
                    "getSignature": {
                        "name": "dirty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 84
                    }
                },
                "error": {
                    "name": "error",
                    "getSignature": {
                        "name": "error",
                        "type": "",
                        "returnType": "",
                        "line": 88
                    }
                },
                "type": {
                    "name": "type",
                    "setSignature": {
                        "name": "type",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"file\" | \"week\" | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"file\" | \"week\" | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "valueInput": {
                    "name": "valueInput",
                    "setSignature": {
                        "name": "valueInput",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newValue",
                                "type": "string | number | boolean | sioStorageFileInterface[] | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 142,
                        "jsdoctags": [
                            {
                                "name": "newValue",
                                "type": "string | number | boolean | sioStorageFileInterface[] | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "valueInput",
                        "type": "",
                        "returnType": "string | number | boolean | [] | null | undefined",
                        "line": 138
                    }
                }
            },
            "templateData": "<div *ngIf=\"this._type === 'file'; then file; else default\"></div>\n<ng-template #file>\n  <ion-item>\n    <ion-label>\n      {{ this.label | translate }}\n    </ion-label>\n    <ion-button (click)=\"pickFile()\" slot=\"end\">UPLOAD</ion-button>\n  </ion-item>\n</ng-template>\n<ng-template #default>\n  <ion-input\n    label=\"{{ this.label | translate }}\"\n    [labelPlacement]=\"this.position\"\n    [fill]=\"this.fill\"\n    [(ngModel)]=\"this.valueInput\"\n    [autocapitalize]=\"this.autocapitalize\"\n    [autocomplete]=\"this.autocomplete\"\n    [autocorrect]=\"this.autocorrect\"\n    [autofocus]=\"this.autofocus\"\n    [clearInput]=\"this.clearInput\"\n    [clearOnEdit]=\"this.clearOnEdit\"\n    [name]=\"this.name\"\n    [debounce]=\"this.debounce\"\n    [disabled]=\"this.disabled\"\n    [type]=\"this._type\"\n    errorText=\"{{ this.name.toUpperCase() + '-ERROR-TEXT' | translate }}\"\n    helperText=\"{{ this.name.toUpperCase() + '-HELPER-TEXT' | translate }}\"\n    [class]=\"this.invalid && this.dirty ? 'ng-invalid ng-touched' : ''\"\n  ></ion-input\n></ng-template>\n"
        },
        {
            "name": "SioCoreItemComponent",
            "id": "component-SioCoreItemComponent-9ad75763e2e1b229adefc40835cccbd1a3a9babfad8d4d7b899001dc2ab3f07384622336c47ec6d9abcbc0b072d075617280c5eb3dd3b20bef405749d66a3e41",
            "file": "libs/core/src/lib/components/item/item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-item",
            "styleUrls": [
                "./item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "alt",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "button",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "doLeftSwipe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "doRightSwipe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "thumbnail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "outputsClass": [
                {
                    "name": "sioCoreItemClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                },
                {
                    "name": "sioCoreItemSwipe",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_color",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioColorType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "Click",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ]
                },
                {
                    "name": "LeftSwipe",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "RightSwipe",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SioCoreLoggerService } from '../../services/logger';\nimport { AttributeBoolean } from '@angular-ru/cdk/decorators';\nimport { InputBoolean } from '@angular-ru/cdk/typings';\nimport { SioColorType } from '../../types';\n\n@Component({\n  selector: 'sio-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss'],\n})\nexport class SioCoreItemComponent implements OnInit {\n\n  private _color : SioColorType = undefined;\n  \n  @Input() public label: string;\n  \n  @Input() public image: string;\n\n  @Input() public set color(value: string) {\n    //console.error(value);\n    this._color = value?value:'none';\n  }\n\n  public get color() : SioColorType {\n    //console.error(value);\n    return this._color;\n  }\n\n  @Input() public set header(value: string) {\n    this.header = value;\n  }\n\n  @AttributeBoolean()\n  @Input() public button: InputBoolean;  \n\n  @AttributeBoolean()\n  @Input() public disabled: InputBoolean;  \n  \n  @AttributeBoolean()\n  @Input() public thumbnail: InputBoolean;\n\n  @AttributeBoolean()\n  @Input() public avatar: InputBoolean;\n\n  @AttributeBoolean()\n  @Input() public doLeftSwipe: InputBoolean;\n  \n  @AttributeBoolean()\n  @Input() public doRightSwipe: InputBoolean;\n  \n  @Input() public alt : string | undefined = undefined;\n  \n  @Output() sioCoreItemClick = new EventEmitter();\n  @Output() sioCoreItemSwipe = new EventEmitter();\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private sioCoreLoggerService: SioCoreLoggerService) {\n    this.disabled = false;\n    this.avatar = false;\n    this.thumbnail = false;\n    this.label = 'no label';\n    this.image = 'https://ionicframework.com/docs/img/demos/thumbnail.svg';\n    console.log(this.label)\n  }\n\n  ngOnInit(): void {\n    this.sioCoreLoggerService.debug('[SioCoreItemComponent][ngOnInit]');\n  }\n\n  public async RightSwipe(): Promise<void> {\n    this.sioCoreLoggerService.info(\n      '[SioCoreItemComponent][RightSwipe] raise event swipe'\n    );\n    this.sioCoreItemSwipe.emit();\n  }\n\n  public async LeftSwipe(): Promise<void> {\n    this.sioCoreLoggerService.info(\n      '[SioCoreItemComponent][LeftSwipe] raise event swipe'\n    );\n    this.sioCoreItemSwipe.emit();\n  }\n\n  public async Click(): Promise<void> {\n    this.sioCoreLoggerService.info(\n      '[SioCoreMenuItemComponent][Click] raise event click'\n    );\n    this.sioCoreItemClick.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host[color=\"none\"] {\n  ion-label {\n    color: var(--ion-color-primary-contrast);\n  }\n}\n\n:host {\n  --silicia-color-selected: rgba(var(--ion-color-primary-rgb), 0.14);\n  --silicia-border-radius: 50px;\n\n  ion-item.custom {\n    border-radius: var(--silicia-border-radius);\n  }\n\n  ion-item.rounded {\n    border-radius: 0 50px 50px 0;\n  }\n\n  ion-item.default {\n    border-radius: 4px;\n  }\n\n  ion-item.md {\n    --padding-start: 10px;\n    --padding-end: 10px;\n  }\n\n  ion-item.md silicia-icon {\n    color: #616e7e;\n  }\n\n  ion-item.md ion-label {\n    font-weight: 500;\n  }\n\n  ion-item.ios {\n    --padding-start: 16px;\n    --padding-end: 16px;\n    --min-height: 50px;\n  }\n\n  ion-item.ios silicia-icon {\n    font-size: 24px;\n    color: #73849a;\n  }\n\n  ion-item.selected {\n    --background: var(--silicia-color-selected);\n  }\n\n  ion-badge {\n    --background: var(--ion-color-warning);\n  }\n\n  ion-item.selected silicia-icon {\n    color: var(--ion-color-primary);\n  }\n\n  ion-tab-button {\n    --color: var(--ion-color-medium);\n    --color-selected: var(--ion-color-primary);\n    min-width: 300px;\n\n    &::before {\n      background-color: transparent;\n      display: block;\n      content: '';\n      margin: 0 auto;\n      width: 64px;\n      height: 2px;\n    }\n\n    &.tab-selected::before {\n      background-color: var(--ion-color-primary);\n    }\n  }\n\n  \n}\n",
                    "styleUrl": "./item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "color": {
                    "name": "color",
                    "setSignature": {
                        "name": "color",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "color",
                        "type": "",
                        "returnType": "SioColorType",
                        "line": 25
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<ion-item-sliding [disabled]=\"this.disabled\">\n  <ion-item-options *ngIf=\"this.doRightSwipe\" side=\"start\" (ionSwipe)=\"this.RightSwipe()\">\n    <ion-item-option color=\"success\" expandable>\n      <ion-icon slot=\"icon-only\" name=\"archive\"></ion-icon>\n    </ion-item-option>\n  </ion-item-options>\n  <ion-item button=\"this.button\" color=\"none\">\n    <ion-avatar *ngIf=\"this.image && this.avatar\" slot=\"start\">\n      <ion-img [alt]=\"this.alt\" [src]=\"this.image\" />\n    </ion-avatar>\n    <ion-thumbnail *ngIf=\"this.image && this.thumbnail\" slot=\"start\">\n      <ion-img [alt]=\"this.alt\" [src]=\"this.image\" />\n    </ion-thumbnail>\n    <ion-label><h2>{{ this.header | translate }}</h2><p>{{ this.label | translate }}</p></ion-label>\n    <ion-label slot=\"end\"></ion-label>\n    <ion-button slot=\"end\"><sio-icon name=\"add\"></sio-icon></ion-button>\n  </ion-item>\n  <ion-item-options  *ngIf=\"this.doLeftSwipe\" side=\"end\" (ionSwipe)=\"this.LeftSwipe()\">\n    <ion-item-option color=\"danger\" expandable>\n      <ion-icon slot=\"icon-only\" name=\"trash\"></ion-icon>\n    </ion-item-option>\n  </ion-item-options>"
        },
        {
            "name": "SioCoreLanguageSelectorComponent",
            "id": "component-SioCoreLanguageSelectorComponent-322014c0545167bcb30db3384e871bfa6eaa2cc03280bf695274c3fa336e6481c2506fcf64b4a0f60340c497d3ad101a131cc4c5368af181c5513dab8a9a45f9",
            "file": "libs/core/src/lib/components/language-selector/language-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-language-selector",
            "styleUrls": [
                "./language-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./language-selector.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "caption",
                    "defaultValue": "'L_LANGUAGE'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'sunny'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"default\" | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "label",
                    "defaultValue": "'L_LANGUAGE'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sioCoreAppComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreAppComponentState",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { IonToggle } from '@ionic/angular';\r\nimport { Select } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { Loggable, SioCoreLoggerService } from '../../services';\r\nimport { SioColorType } from '../../types';\r\nimport { SioCoreAppComponentState } from '../../store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Loggable()\r\n@Component({\r\n  selector: 'sio-language-selector',\r\n  templateUrl: './language-selector.component.html',\r\n  styleUrls: ['./language-selector.component.scss'],\r\n})\r\nexport class SioCoreLanguageSelectorComponent implements OnInit {\r\n  @Input() public caption = 'L_LANGUAGE';\r\n  @Input() public style: 'default' | undefined = undefined;\r\n  @Input() public color: SioColorType;\r\n  @Input() public icon = 'sunny';\r\n\r\n  public label = 'L_LANGUAGE';\r\n\r\n  //@Select(SioCoreAppComponentState) darkmode$!: Observable<boolean>; \r\n\r\n  //@ViewChild('darkmode_toggle', { static: true }) ionToggle!: IonToggle;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  constructor(\r\n    private sioCoreLoggerService: SioCoreLoggerService,\r\n    public sioCoreAppComponentState: SioCoreAppComponentState,\r\n    private translateService: TranslateService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    null;\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  public onChange(event: any) {\r\n    this.sioCoreLoggerService.debug('set language to ' + event.detail.value);\r\n    this.translateService.use(event.detail.value);   \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n\r\n}",
                    "styleUrl": "./language-selector.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item>\r\n    <ion-select label=\"{{ this.label | translate }}\" (ionChange)=\"this.onChange($event)\">\r\n      <ion-select-option value=\"it\">Italiano</ion-select-option>\r\n      <ion-select-option value=\"en\">Inglese</ion-select-option>\r\n    </ion-select>\r\n  </ion-item>\r\n  {{ this.label | translate }}"
        },
        {
            "name": "SioCoreListComponent",
            "id": "component-SioCoreListComponent-b2c8ee0301b447540d69e45b6e85ade5f4d3c6b5d208d14c4942572d67fb50726ee634939b62dacd357659c31bda7d9798a779a787000e2b47fdf0d05a874709",
            "file": "libs/core/src/lib/components/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-list",
            "styleUrls": [
                "./list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "desktop",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "'main'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "lines",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"full\" | \"inset\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'side'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"side\" | \"bottom\" | \"top\"",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'compact'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"compact\" | \"inset\"",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"default\" | \"rounded\" | \"custom\"",
                    "decorators": []
                },
                {
                    "name": "toggleIcon",
                    "defaultValue": "'chevron-up-outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toggleIconSlot",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sioCoreListState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreListInterface",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clic",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trackItems",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { SioColorType } from '../../types';\nimport { SioCoreListInterface } from './store/list.interface';\nimport { SioCoreListState } from './store/list.state';\nimport { SioCoreLoggerService } from '../../services/logger';\n\n@Component({\n  selector: 'sio-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class SioCoreListComponent implements OnInit {\n  @Input() public id = 'main';\n  @Input() public lines: 'full' | 'inset' | 'none' = 'none';\n  //@Input() public shape: 'line' | 'dot' | 'rounded' = 'line';\n  @Input() public position: 'side' | 'bottom' | 'top' = 'side';\n  @Input() public color: SioColorType;\n  @Input() public toggleIconSlot: 'start' | 'end' = 'end';\n  @Input() public toggleIcon = 'chevron-up-outline';\n  @Input() public shape: 'compact' | 'inset' = 'compact';\n  @Input() public style: 'default' | 'rounded' | 'custom' = 'default';\n  @Input() public desktop = false;\n\n  // @Output() public sioCoreMenuDidChange = new EventEmitter();\n  \n  public sioCoreListState!: SioCoreListInterface;\n\n  constructor(\n    private sioCoreLoggerService: SioCoreLoggerService,\n    private _sioCoreListState: SioCoreListState\n  ) { }\n\n  ngOnInit(): void {\n    this.sioCoreLoggerService.debug('[sioCoreListComponent][ngOnInit]');\n    this.sioCoreListState = this._sioCoreListState.snapshot[this.id];\n    this.sioCoreLoggerService.debug('[sioCoreListComponent][ngOnInit]', this.sioCoreListState);\n  }\n\n  public clic(url: string) {\n    this._sioCoreListState.go(url);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  //ionMenuDidChange(value: any) {\n  //  this.sioCoreMenuDidChange.emit(value);\n  //}\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trackItems(index: number, itemObject: any) {\n    return itemObject.id;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  silicia-menu-item {\n    --silicia-border-radius: 10px;\n  }\n}\n",
                    "styleUrl": "./list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sioCoreListState",
                        "type": "SioCoreListState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sioCoreListState",
                        "type": "SioCoreListState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-template>\n  <ion-list>\n    <sio-item label=\"test\" image=\"\" alt=\"test\"></sio-item>\n  </ion-list> \n</ng-template>"
        },
        {
            "name": "SioCoreMenuComponent",
            "id": "component-SioCoreMenuComponent-895d5dd67f585306a9fab014353742e882884879b9baf79ce93121b6852e0a23c9233994f9c02c4c19481b525d014670fc8188a0ff6cc571dce0392e91b973c2",
            "file": "libs/core/src/lib/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-menu",
            "styleUrls": [
                "./menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "desktop",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "lines",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"full\" | \"inset\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "menuID",
                    "defaultValue": "'main'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'side'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"side\" | \"bottom\" | \"top\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'compact'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"compact\" | \"inset\"",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"default\" | \"rounded\" | \"custom\"",
                    "decorators": []
                },
                {
                    "name": "toggleIcon",
                    "defaultValue": "'chevron-up-outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toggleIconSlot",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "sioCoreMenuDidChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                },
                {
                    "name": "sioCoreMenuWillChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "sioCoreAppComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreAppComponentState",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sioCoreMenuState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreMenuInterface",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clic",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ionMenuDidChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ionMenuWillChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trackItems",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { SioColorType } from '../../types';\nimport { SioCoreMenuInterface } from '../../interfaces';\nimport { SioCoreMenuState } from './store/menu.state';\nimport { SioCoreLoggerService } from '../../services/logger';\nimport { SioCoreAppComponentState } from '../app/store';\n\n@Component({\n  selector: 'sio-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class SioCoreMenuComponent implements OnInit {\n  @Input() public menuID = 'main';\n  @Input() public lines: 'full' | 'inset' | 'none' = 'none';\n  //@Input() public shape: 'line' | 'dot' | 'rounded' = 'line';\n  @Input() public position: 'side' | 'bottom' | 'top' | 'none' = 'side';\n  @Input() public color: SioColorType;\n  @Input() public toggleIconSlot: 'start' | 'end' = 'end';\n  @Input() public toggleIcon = 'chevron-up-outline';\n  @Input() public shape: 'compact' | 'inset' = 'compact';\n  @Input() public style: 'default' | 'rounded' | 'custom' = 'default';\n  @Input() public desktop = false;\n\n  @Output() public sioCoreMenuDidChange = new EventEmitter();\n  @Output() public sioCoreMenuWillChange = new EventEmitter();\n\n  public sioCoreMenuState!: SioCoreMenuInterface;\n\n  constructor(\n    private sioCoreLoggerService: SioCoreLoggerService,\n    public sioCoreAppComponentState: SioCoreAppComponentState,\n    private _sioCoreMenuState: SioCoreMenuState\n  ) { }\n\n  ngOnInit(): void {\n    this.sioCoreLoggerService.debug('[sioCoreMenuComponent][ngOnInit]', this.menuID);\n    this.sioCoreMenuState = this._sioCoreMenuState.snapshot[this.menuID];\n    this.sioCoreLoggerService.debug('[sioCoreMenuComponent][ngOnInit]', this.sioCoreMenuState);\n  }\n\n  public clic(url: string) {\n    this._sioCoreMenuState.go(url);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ionMenuDidChange(value: any) {\n    this.sioCoreMenuDidChange.emit(value);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ionMenuWillChange(value: any) {\n    this.sioCoreMenuWillChange.emit(value);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trackItems(index: number, itemObject: any) {\n    return itemObject.id;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  ion-list {\n    background-color: transparent;\n  }\n}\n",
                    "styleUrl": "./menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sioCoreMenuState",
                        "type": "SioCoreMenuState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sioCoreMenuState",
                        "type": "SioCoreMenuState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-accordion-group\n  *ngIf=\"this.sioCoreMenuState.caption\"\n  [expand]=\"this.shape\"\n>\n  <ion-accordion\n    [value]=\"this.sioCoreMenuState.caption\"\n    [toggleIconSlot]=\"this.toggleIconSlot\"\n    [toggleIcon]=\"this.toggleIcon\"\n  >\n    <ion-item slot=\"header\" [color]=\"this.color\">\n      <ion-label>{{ this.sioCoreMenuState.caption | translate }}</ion-label>\n    </ion-item>\n    <ion-list slot=\"content\" inset=\"true\">\n      <sio-menu-item\n        *ngFor=\"\n          let item of sioCoreMenuState.items | keyvalue;\n          trackBy: trackItems\n        \"\n        [color]=\"this.color\"\n        [icon]=\"item.value.icon\"\n        [caption]=\"item.value.caption\"\n        [lines]=\"this.lines\"\n        [style]=\"this.style\"\n      >\n      </sio-menu-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n<div *ngIf=\"!this.sioCoreMenuState.caption\">\n  <ion-menu-toggle auto-hide=\"false\">\n    <ion-list [inset]=\"true\">\n      <sio-menu-item\n        *ngFor=\"\n          let item of this.sioCoreMenuState.items | keyvalue;\n          trackBy: trackItems\n        \"\n        [icon]=\"item.value.icon\"\n        [caption]=\"item.value.caption\"\n        [lines]=\"this.lines\"\n        [url]=\"item.value.url\"\n        [style]=\"this.style\"\n        [tabbed]=\"false\"\n        [badge]=\"item.value.badge!\"\n        [color]=\"this.color\"\n      >\n      </sio-menu-item>\n    </ion-list>\n  </ion-menu-toggle>\n</div>\n"
        },
        {
            "name": "SioCoreMenuItemComponent",
            "id": "component-SioCoreMenuItemComponent-24487d0c0bc913cddadb684a0cf217f94ab68815579580381afc47cdcba4e325a95f518c53bfcc8b4588ba5f428ac2a73651fdc8bbe187cf70b90b650cadf372",
            "file": "libs/core/src/lib/components/menu-item/menu-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-menu-item",
            "styleUrls": [
                "./menu-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number | undefined",
                    "decorators": []
                },
                {
                    "name": "caption",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "layout",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"icon-bottom\" | \"icon-end\" | \"icon-hide\" | \"icon-start\" | \"icon-top\" | \"label-hide\" | undefined",
                    "decorators": []
                },
                {
                    "name": "lines",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"full\" | \"inset\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"default\" | \"rounded\" | \"custom\" | \"tab\"",
                    "decorators": []
                },
                {
                    "name": "tabbed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'navigate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "\"download\" | \"navigate\" | \"external\" | \"custom\"",
                    "decorators": []
                },
                {
                    "name": "url",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "sioCoreMenuItemClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "Click",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SioCoreLoggerService } from '../../services/logger';\nimport { SioColorType } from '../../types';\n\n@Component({\n  selector: 'sio-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.scss'],\n})\nexport class SioCoreMenuItemComponent implements OnInit {\n  @Input() public caption: string | undefined = undefined;\n  @Input() public style: 'default' | 'rounded' | 'custom' | 'tab' = 'rounded';\n  @Input() public lines: 'full' | 'inset' | 'none' = 'none';\n  @Input() public color: SioColorType = 'none';\n  @Input() public icon: string | undefined = undefined;\n  @Input() public url: string | undefined = undefined;\n  @Input() public layout:\n    | 'icon-bottom'\n    | 'icon-end'\n    | 'icon-hide'\n    | 'icon-start'\n    | 'icon-top'\n    | 'label-hide'\n    | undefined = undefined;\n  @Input() public type: 'download' | 'navigate' | 'external' | 'custom' =\n    'navigate';\n  @Input() public badge: number | undefined = undefined;\n  @Input() public tabbed = false;\n\n  @Output() sioCoreMenuItemClick = new EventEmitter();\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private sioCoreLoggerService: SioCoreLoggerService) {\n    this.sioCoreLoggerService.debug('[SioCoreMenuItem][constructor] add menu item' + this.caption);\n  }\n\n  ngOnInit(): void {\n    if (this.type !== 'custom')\n      if (!this.url) {\n        this.url = '/';\n      } else {\n        if (this.url.startsWith('http://') || this.url.startsWith('https://')) {\n          this.sioCoreLoggerService.debug('external url');\n          this.type = 'external';\n          if (!this.caption)\n            this.caption = `M_LINK_${this.url\n              .replace('http://', '')\n              .replace('https://', '')\n              .replace('www.', '')\n              .split('.')[0]\n              .toUpperCase()}`;\n        } else {\n          this.sioCoreLoggerService.debug('internal url');\n          this.type = 'navigate';\n          this.url =\n            (!this.url.replace('//', '/').startsWith('/') ? '/' : '') +\n            this.url;\n          if (!this.caption)\n            this.caption = `M${this.url.replace('/', '_').toUpperCase()}`;\n        }\n      }\n  }\n\n  public async Click(): Promise<void> {\n    this.sioCoreLoggerService.info(\n      '[SioCoreMenuItemComponent][Click] raise event click'\n    );\n    switch (this.type) {\n      case 'external':\n        window.open(this.url as string, '_blank');\n        break;\n      case 'navigate':\n      default:\n    }\n    this.sioCoreMenuItemClick.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host[color=primary]{\n  --sio-color-menu-item: var(--ion-color-primary); \n  --sio-color-menu-item-selected: var(--ion-color-primary-tint);\n  --sio-color-menu-item-badge: var(--ion-color-warning);\n  \n  ion-item.rounded {\n    border-radius: 0 50px 50px 0;\n  }\n\n  ion-item.default {\n    border-radius: 10px;\n  }\n\n  ion-item.md {\n    --padding-start: 10px;\n    --padding-end: 10px;\n  }\n\n  ion-item sio-icon {\n    color: var(--ion-color-primary-contrast);\n  }\n\n  ion-item ion-label {\n    color: var(--ion-color-primary-contrast);\n  }\n\n  ion-item.md ion-label {\n    font-weight: 500;\n  }\n\n  ion-item.ios {\n    --padding-start: 16px;\n    --padding-end: 16px;\n    --min-height: 50px;\n  }\n\n  ion-item.ios sio-icon {\n    font-size: 24px;\n  }\n\n  ion-item {\n    --background: var(--sio-color-menu-item);\n  }\n\n  ion-item.selected {\n    --background: var(--sio-color-menu-item-selected); \n  }\n\n  ion-badge {\n    --background: var(--sio-color-menu-item-badge);\n  }  \n}\n",
                    "styleUrl": "./menu-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"this.caption !== '-'; then menu; else break\"></div>\n<ng-template #break>\n  <ion-item-divider>\n    <label>test</label>\n  </ion-item-divider>\n</ng-template>\n<ng-template #menu>\n  <ion-item\n    button\n    [color]=\"this.color\"\n    [routerLink]=\"this.type === 'navigate' ? this.url : null\"\n    routerDirection=\"forward\"\n    [lines]=\"this.lines\"\n    detail=\"false\"\n    routerLinkActive=\"selected\"\n    [class]=\"this.style\"\n    (click)=\"this.Click()\"\n  >\n    <div #start>\n      <ng-content slot=\"start\" select=\"[slot='start']\"></ng-content>\n    </div>\n    <ng-container *ngIf=\"!start.hasChildNodes()\">\n      <sio-icon [name]=\"this.icon\" slot=\"start\"></sio-icon>\n    </ng-container>\n    <ion-label>{{ this.caption! | translate }}</ion-label>\n    <div #end>\n      <ng-content slot=\"end\" select=\"[slot='end']\"></ng-content>\n    </div>\n    <ng-container *ngIf=\"!end.hasChildNodes()\">\n      <ion-badge *ngIf=\"this.badge! > 0\" slot=\"end\">{{ this.badge }}</ion-badge>\n    </ng-container>\n  </ion-item>\n</ng-template>\n"
        },
        {
            "name": "SioCoreModalComponent",
            "id": "component-SioCoreModalComponent-986d0b414dac70402f3906d6dcda161b8a4bbb139e7770f8647c399b2787067db6fe5c17bb65ed59bb48a57c8859c1f26e25c10a111d11d4efcf634ce71474d3",
            "file": "libs/core/src/lib/components/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-modal",
            "styleUrls": [
                "./modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "'main'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "willDismiss",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonModal",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "IonModal"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ionViewDidEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWillDismiss",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output, ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { SioCoreLoggerService } from '../../services/logger';\nimport { OverlayEventDetail } from '@ionic/core/components';\nimport { IonModal } from '@ionic/angular';\n\n@Component({\n  selector: 'sio-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n})\nexport class SioCoreModalComponent implements OnInit {\n\n  @ViewChild(IonModal) modal!: IonModal;\n\n  @Input() public id = 'main';\n\n  @Output() public willDismiss = new EventEmitter();\n  \n  onCancel() {\n    this.sioCoreLoggerService.info('[SioCoreModalComponent][onCancel]')\n    this.modal.dismiss(null, 'cancel');\n  }\n\n  onSubmit() {\n    this.sioCoreLoggerService.info('[SioCoreModalComponent][onSubmit]')    \n    this.modal.dismiss('test', 'confirm');\n  }\n\n  onWillDismiss(event: Event) {\n    this.sioCoreLoggerService.info('[SioCoreModalComponent][onDismiss]'); \n    this.modal.present();\n    const ev = event as CustomEvent<OverlayEventDetail<string>>;\n    if (ev.detail.role === 'confirm') {\n      this.sioCoreLoggerService.info('[SioCoreModalComponent][onDismiss]');         \n      this.willDismiss.emit(event);\n    }\n  }\n\n  constructor(\n    private sioCoreLoggerService: SioCoreLoggerService,\n  ) {\n    \n  }\n\n  onFocus() {\n    this.modal.setCurrentBreakpoint(0.85);\n  }\n\n  ngOnInit(): void {\n    this.sioCoreLoggerService.debug('[sioCoreModalComponent][ngOnInit]');\n    \n  }\n\n  ionViewDidEnter() {\n    console.error('test');\n    this.modal.present();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  ion-modal {\n    --width: 100%\n  }\n}\n",
                    "styleUrl": "./modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-modal \n[backdropBreakpoint]=\"0.2\" [isOpen]=\"true\" [initialBreakpoint]=\"0.2\" [breakpoints]=\"[0.2, 0.85]\" [keepContentsMounted]=\"true\" (willDismiss)=\"onWillDismiss($event)\">\n  <ng-template>\n    \n  </ng-template>\n</ion-modal>"
        },
        {
            "name": "SioCorePageComponent",
            "id": "component-SioCorePageComponent-686a09b6fef8455f175a1e10b589eca167cbf3eccb4b7c4f4575bab4b1f4bc50c7208a3e28a485e461c61d0a1c62d42d35591959db8b5e87ca7d9905bae505a0",
            "file": "libs/core/src/lib/components/page/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-page",
            "styleUrls": [
                "./page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "back",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "SioColorType",
                    "decorators": []
                },
                {
                    "name": "fullmode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toolbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "InputBoolean",
                    "decorators": [
                        {
                            "name": "AttributeBoolean",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sioCoreAppComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreAppComponentState",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sioCorePageComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCorePageComponentState",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "split",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { SioCoreLoggerService } from '../../services';\nimport { SioCorePageComponentState } from './store';\nimport { SioCoreAppComponentState } from '../app/store';\n\nimport { AttributeBoolean } from '@angular-ru/cdk/decorators';\nimport { InputBoolean } from '@angular-ru/cdk/typings';\n\nimport { SioColorType } from '../../types';\n\n@Component({\n  selector: 'sio-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.scss'],\n})\nexport class SioCorePageComponent implements OnInit {\n  \n  @Input() title: string;\n  @Input() color: SioColorType;\n\n  @AttributeBoolean() @Input() set toolbar(value: InputBoolean) {\n    this.sioCorePageComponentState.setToolbar(value as boolean);\n  }\n\n  @AttributeBoolean() @Input() set menu(value: InputBoolean) {\n    this.sioCorePageComponentState.setMenu(value as boolean);\n  }\n  \n  @AttributeBoolean() @Input() set back(value: InputBoolean) {\n    this.sioCorePageComponentState.setBack(value as boolean);\n  }\n  @AttributeBoolean() @Input() set search(value: InputBoolean) {\n    this.sioCorePageComponentState.setSearch(value as boolean);\n  }\n\n  @AttributeBoolean() @Input() set fullmode(value: InputBoolean) {\n    this.sioCoreAppComponentState.SetFullmode(value as boolean);\n  }\n\n  public split : boolean;\n\n  constructor(\n    private elementRef: ElementRef, \n    private sioLoggerService: SioCoreLoggerService,\n    public sioCoreAppComponentState: SioCoreAppComponentState,\n    public sioCorePageComponentState: SioCorePageComponentState,\n  ) {\n    //this.sioCoreAppComponentState.SetFullmode(false);\n    this.toolbar = true;\n    this.title = 'PAGE_TITLE';\n    this.menu = false;\n    this.back = false;\n    this.search = false;\n    this.split = false;\n    this.elementRef.nativeElement.classList.add('ion-page');\n    //this.sioCoreAppComponentState.setSidemenu('pricetags');\n  }\n\n  //@Select(SioCoreAppComponentState.split) split$!: Observable<boolean>; \n\n  ngOnInit(): void {\n    this.sioLoggerService.debug(`[sioCorePageComponentState][ngOnInit]`);\n    //this.split$.subscribe((value) => { this.split = value});\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n\n  --sio-page-background: var(--ion-background-color);\n\n  ion-content {\n    --background: var(--sio-page-background);\n  }\n\n  #container {\n    text-align: center;\n\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  #container strong {\n    font-size: 20px;\n    line-height: 26px;\n  }\n\n  #container p {\n    font-size: 16px;\n    line-height: 22px;\n\n    color: #8c8c8c;\n\n    margin: 0;\n  }\n\n  #container a {\n    text-decoration: none;\n  }\n}\n",
                    "styleUrl": "./page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCorePageComponentState",
                        "type": "SioCorePageComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCorePageComponentState",
                        "type": "SioCorePageComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "toolbar": {
                    "name": "toolbar",
                    "setSignature": {
                        "name": "toolbar",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "menu": {
                    "name": "menu",
                    "setSignature": {
                        "name": "menu",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "back": {
                    "name": "back",
                    "setSignature": {
                        "name": "back",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "search": {
                    "name": "search",
                    "setSignature": {
                        "name": "search",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "fullmode": {
                    "name": "fullmode",
                    "setSignature": {
                        "name": "fullmode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 36,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "InputBoolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<ion-header\n  *ngIf=\"this.toolbar && !this.fullmode\"\n  collapse=\"fade\"\n  [translucent]=\"true\"\n  class=\"ion-no-border\"\n>\n  <ion-toolbar [color]=\"this.color\">\n    <ion-buttons slot=\"start\">\n      <ng-container>\n        <ion-menu-button menu=\"start\"></ion-menu-button>\n        <ion-back-button *ngIf=\"this.back\"></ion-back-button>\n      </ng-container>\n    </ion-buttons>\n    <ion-title>{{ this.title | translate }}</ion-title>\n    <ion-buttons slot=\"end\">\n      <ng-content select=\"[slot='end']\"> </ng-content>\n    </ion-buttons>\n    <ion-buttons\n      *ngIf=\"!this.sioCoreAppComponentState.snapshot.layout!.split\"\n      slot=\"end\"\n    >\n      <ng-content select=\"[slot='mobile']\"></ng-content>\n\n      <ion-menu-button menu=\"end\"></ion-menu-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <ion-header *ngIf=\"this.toolbar && !this.fullmode\" collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">{{ this.title | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <div #content>\n    <ng-content></ng-content>\n  </div>\n  <ng-container *ngIf=\"!content.hasChildNodes()\">\n    <div id=\"container\">\n      <h1>{{ 'PAGE_COMPONENT_DEFAULT_1' | translate }} {{ this.title | translate }}</h1>\n      <strong>{{ 'PAGE_COMPONENT_DEFAULT_2' | translate }}</strong>\n      <p>\n        {{ 'PAGE_COMPONENT_LINK' | translate }}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://silicia-apps.gitbook.io/sio-framework/\"\n          >SIO Framework</a\n        >\n      </p>\n    </div>\n  </ng-container>\n</ion-content>\n\n<ion-footer>\n  <div #footer>\n  <ng-content select=\"[slot='footer']\"></ng-content>\n  </div>\n  <ng-container *ngIf=\"!footer.hasChildNodes()\">\n    <ion-fab slot=\"footer\" vertical=\"bottom\" horizontal=\"end\">\n      <sio-button type=\"fab\" icon=\"add\"></sio-button>\n      <ion-fab-list side=\"top\">\n        <sio-button type=\"fab\" icon=\"logo-euro\" size=\"small\" upload ></sio-button>\n        <!--// <sio-button type=\"fab\" icon=\"notifications\" size=\"small\"></sio-button> //-->\n        <sio-button type=\"fab\" icon=\"car\" size=\"small\" upload ></sio-button>\n      </ion-fab-list>\n    </ion-fab>\n  </ng-container>\n</ion-footer>\n"
        },
        {
            "name": "SioCoreSlideComponent",
            "id": "component-SioCoreSlideComponent-d16ec2fa08951e7b760312b18d19eb73d049a3d189a35dc4a56aece07061a61dbf266e5f409132833590706b5f5654c751d924852f2ffa5dbe21373b62441c86",
            "file": "libs/core/src/lib/components/slide/slide.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-slide",
            "styleUrls": [
                "./slide.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slide.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "swiperModules",
                    "defaultValue": "[IonicSlides]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { IonicSlides } from '@ionic/angular';\nimport { SioCoreLoggerService } from '../../services/logger';\n\nimport { register } from 'swiper/element/bundle';\n\nregister();\n\n@Component({\n  selector: 'sio-slide',\n  templateUrl: './slide.component.html',\n  styleUrls: ['./slide.component.scss'],\n})\nexport class SioCoreSlideComponent implements OnInit {\n  public swiperModules = [IonicSlides];\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private sioCoreLoggerService: SioCoreLoggerService) {}\n\n  ngOnInit(): void {\n    this.sioCoreLoggerService.debug('[SioCoreSlideComponent][OnInit]');\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  swiper-container {\n    --swiper-pagination-bullet-inactive-color: var(--ion-color-step-200, #cccccc);\n    --swiper-pagination-color: var(--ion-color-primary, #3880ff);\n    --swiper-pagination-progressbar-bg-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.25);\n    --swiper-scrollbar-bg-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);\n    --swiper-scrollbar-drag-bg-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.5);\n  }\n  \n  swiper-slide {\n    width: auto;\n  }\n}\n",
                    "styleUrl": "./slide.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-list lines=\"none\">\n  <ion-list-header><ion-label>Più Venduti</ion-label></ion-list-header>\n  <ion-item>\n    <swiper-container [modules]=\"this.swiperModules\" slides-per-view=\"auto\" [spaceBetween]=\"1\">\n      <swiper-slide> \n        <sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n        </sio-card></swiper-slide>\n      <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n      <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n      <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n      <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n        \n      </sio-card></swiper-slide>\n      \n    </swiper-container>\n  </ion-item>\n<ion-list-header><ion-label>Offerte</ion-label></ion-list-header>\n<ion-item>\n  <swiper-container [modules]=\"this.swiperModules\" slides-per-view=\"auto\" [spaceBetween]=\"1\">\n    <swiper-slide> \n      <sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n      </sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n      \n    </sio-card></swiper-slide>\n    \n  </swiper-container>\n</ion-item>\n<ion-list-header><ion-label>Bevande</ion-label></ion-list-header>\n<ion-item>\n  <swiper-container [modules]=\"this.swiperModules\" slides-per-view=\"auto\" [spaceBetween]=\"1\">\n    <swiper-slide> \n      <sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n      </sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n      \n    </sio-card></swiper-slide>\n    \n  </swiper-container>\n</ion-item>\n<ion-list-header><ion-label>Offerte</ion-label></ion-list-header>\n<ion-item>\n  <swiper-container [modules]=\"this.swiperModules\" slides-per-view=\"auto\" [spaceBetween]=\"1\">\n    <swiper-slide> \n      <sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n      </sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\"></sio-card></swiper-slide>\n    <swiper-slide><sio-card title=\"€ 5,00\" subtitle=\"coca cola\" img=\"https://loremflickr.com/120/60?random=125\">\n      \n    </sio-card></swiper-slide>\n    \n  </swiper-container>\n</ion-item>\n</ion-list>\n"
        },
        {
            "name": "SioCoreTabComponent",
            "id": "component-SioCoreTabComponent-85b2e004283ca1e2cbae80a680956a0a14e307b3afbe2b216069925bb3175126d3e2a6f07fae19126cbd1519dcf8f39a6dcc97300e257fb19037a03997282c36",
            "file": "libs/core/src/lib/components/tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-tab",
            "styleUrls": [
                "./tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" |  | undefined",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"default\" | \"reiner\"",
                    "decorators": []
                },
                {
                    "name": "tabID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "sioCoreTabsDidChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                },
                {
                    "name": "sioCoreTabsWillChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "sioCoreAppComponentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SioCoreAppComponentState",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sioCoreMenuState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<SioCoreMenuInterface>",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tab_icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ionTabsDidChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ionTabsWillChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trackItems",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SioCoreMenuInterface } from '../../interfaces';\nimport { SioCoreMenuState } from '../menu/store';\nimport { SioCoreAppComponentState } from '../app/store';\nimport { Loggable, SioCoreLoggerService } from '../../services/logger';\nimport { Nullable } from '@angular-ru/cdk/typings';\n\n@Loggable()\n@Component({\n  selector: 'sio-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss'],\n})\nexport class SioCoreTabComponent implements OnInit {\n  @Input() public tabID: string;\n  @Input() public position: any; //'top' | 'bottom' = 'bottom';\n  @Input() public style: 'default' | 'reiner' = 'default';\n  @Input() public color:\n    | 'danger'\n    | 'dark'\n    | 'light'\n    | 'medium'\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'tertiary'\n    | 'warning'\n    | (string & Record<never, never>)\n    | undefined;\n\n  @Output() public sioCoreTabsDidChange = new EventEmitter();\n  @Output() public sioCoreTabsWillChange = new EventEmitter();\n\n  public sioCoreMenuState: Nullable<SioCoreMenuInterface>;\n\n  public tab_icon: string | undefined;\n\n  constructor(\n    private sioCoreLoggerService: SioCoreLoggerService,\n    private sioCoreMenuState$: SioCoreMenuState,\n    public sioCoreAppComponentState: SioCoreAppComponentState,\n  ) {\n    this.sioCoreLoggerService.debug(`[sioCoreTabComponent][constructor]`);\n    this.tabID = 'main';\n    this.color = undefined;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ionTabsDidChange(value: any) {\n    this.sioCoreTabsDidChange.emit(value);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ionTabsWillChange(value: any) {\n    this.sioCoreTabsWillChange.emit(value);\n  }\n\n  ngOnInit(): void {\n    this.sioCoreMenuState = this.sioCoreMenuState$.snapshot[this.tabID];\n    console.log(this.sioCoreMenuState);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trackItems(index: number, itemObject: any) {\n    return itemObject.id;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host[styl=\"one\"] {\n  ion-tab-bar.top {\n    height: 55px;\n    justify-content: left;\n  }\n\n  ion-tab-bar {\n    bottom: 20px;\n    position: relative;\n    border-radius: 16px;\n    width: 92%;\n    margin: 0 auto;\n  }\n  \n  ion-tab-button {\n    --color: var(--ion-color-medium);\n    --color-selected: var(--ion-color-primary);\n  \n    &::before {\n      background-color: transparent;\n      display: block;\n      content: \"\";\n      margin: 0 auto;\n      width: 20px;\n      height: 2px;\n    }\n  \n    &.tab-selected::before {\n      background-color: var(--ion-color-primary);\n    }\n  }\n}\n\n:host[visible=false] {\n  ion-tab-bar {\n    /* Your styles for the selected ion-tab-bar here */\n    display: none;\n  }\n}\n",
                    "styleUrl": "./tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreMenuState$",
                        "type": "SioCoreMenuState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "sioCoreLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreMenuState$",
                        "type": "SioCoreMenuState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sioCoreAppComponentState",
                        "type": "SioCoreAppComponentState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-tabs (ionTabsDidChange)=\"this.ionTabsDidChange(1)\" (ionTabsWillChange)=\"this.ionTabsWillChange(1)\">\n  <ion-tab-bar *ngIf=\"this.position === 'bottom'\" slot=\"bottom\" [color]=\"this.color\" class=\"ion-no-border\">\n    <ion-tab-button *ngFor=\"let item of sioCoreMenuState?.items | keyvalue\" [tab]=\"item.value.url\" [disabled]=\"false\" \n      [download]=\"undefined\">\n      <ion-icon *ngIf=\"item.value.caption !== '--' && item.value.id < 6\" [ios]=\"item.value.icon + '-outline'\"\n        [md]=\"item.value.icon + '-sharp'\">\n      </ion-icon>\n      <ion-label *ngIf=\"item.value.caption !== '--' && item.value.id < 6\">{{ (item.value.caption ? item.value.caption :\n        'M_'+item.value.url!.replace('/',\n        '_').toUpperCase()) |\n        translate }}</ion-label>\n      <ion-badge *ngIf=\"item.value.caption !== '--' && item.value.id < 6 && item.value.badge! > 0\">{{ item.value.badge\n        }}</ion-badge>\n    </ion-tab-button>\n  </ion-tab-bar>\n  <ion-tab-bar *ngIf=\"this.position === 'top'\" slot=\"top\" [color]=\"this.color\" class=\"ion-no-border top\">\n    <ion-tab-button *ngFor=\"let item of sioCoreMenuState?.items | keyvalue\" [tab]=\"item.value.url\" [disabled]=\"false\" \n      [download]=\"undefined\" layout=\"icon-start\">\n      <ion-icon *ngIf=\"item.value.caption !== '--' && item.value.id < 6\" [ios]=\"item.value.icon + '-outline'\"\n        [md]=\"item.value.icon + '-sharp'\">\n      </ion-icon>\n      <ion-label *ngIf=\"item.value.caption !== '--' && item.value.id < 6\">{{ (item.value.caption ? item.value.caption :\n        'M_'+item.value.url!.replace('/',\n        '_').toUpperCase()) |\n        translate }}</ion-label>\n      <ion-badge *ngIf=\"item.value.caption !== '--' && item.value.id < 6 && item.value.badge! > 0\">{{ item.value.badge\n        }}</ion-badge>\n    </ion-tab-button>\n  </ion-tab-bar>\n</ion-tabs>"
        },
        {
            "name": "SioCoreTitleComponent",
            "id": "component-SioCoreTitleComponent-ebd809d094ef6cb9b7c44c77a3701ea836814d65197665936232287511314405eba049b768b14c08104841c6c5936b1b2a944125f1bd569e32a9b7607d7ab3f3",
            "file": "libs/core/src/lib/components/title/title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sio-title",
            "styleUrls": [
                "./title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { SioCoreLoggerService } from '../../services';\n\n@Component({\n  selector: 'sio-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class SioCoreTitleComponent implements OnInit {\n  \n  @Input() title: string;\n  \n  constructor(\n    private sioLoggerService: SioCoreLoggerService,\n  ) {\n    this.title = 'T_PAGE';\n  }\n\n  ngOnInit(): void {\n    this.sioLoggerService.debug(`[sioCoreTitleComponent][ngOnInit]`);\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  \n}",
                    "styleUrl": "./title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "sioLoggerService",
                        "type": "SioCoreLoggerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header collapse=\"condense\">\n  <ion-toolbar>\n    <ion-title size=\"large\">{{ this.title | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../**/*.stories.@(js|jsx|ts|tsx|mdx)'],\n  addons: ['@storybook/addon-essentials', '@storybook/addon-interactions'],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs',\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  logLevel: 0,\n  plugins: [],\n  backend: {},\n  app: {\n    title: 'Demo App',\n    language: {\n      avaibles: ['it', 'en'],\n      default: 'it',\n      fallback: 'en',\n    },\n    menu: {\n      main: {\n        id: 'main',\n        items: {\n          1: { id: 1, icon: 'home', url: 'home', badge: 3 },\n          2: { id: 2, icon: 'information-circle', url: 'info' },\n          3: { id: 3, icon: 'settings', url: 'settings' },\n        },\n      },\n      secondary: {\n        id: 'secondary',\n        items: {\n          1: { id: 1, icon: 'stats', url: 'stats', badge: 3 },\n          2: { id: 2, icon: 'information-circle', url: 'info' },\n          3: { id: 3, icon: 'settings', url: 'settings' },\n        },\n      },\n      logged: {\n        id: 'logged',\n        items: {\n          1: {\n            id: 1,\n            icon: 'person',\n            caption: 'T_MENU_LOGGED_PROFILE',\n            url: '/auth/profile',\n          },\n        },\n      },\n    },\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n    leftPanelType: undefined,\n    rightPanelType: undefined,\n    leftPanelMenuID: '',\n    rightPanelMenuID: '',\n    tabMenuID: '',\n    tabDesktopPosition: '',\n    tabMobilePosition: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    lines: 'none',\n    value: '',\n    position: 'left',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-down-outline',\n    shape: 'compact',\n    title: '',\n    subtitle: '',\n    img: null,\n    altImg: 'Alternative Text for image',\n    type: 'standard',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/card works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    caption: 'L_DARKMODE',\n    style: undefined,\n    icon: 'sunny',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/dark-mode-toggle works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    cancel: false,\n    color: 'dark',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/header works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: undefined,\n    url: undefined,\n    size: undefined,\n    only: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    name: '',\n    position: 'floating',\n    autocapitalize: 'off',\n    autocomplete: 'off',\n    autocorrect: 'off',\n    autofocus: false,\n    clearInput: false,\n    clearOnEdit: undefined,\n    color: undefined,\n    debounce: 0,\n    disabled: false,\n    lines: 'full',\n    type: 'text',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    image: '',\n    alt: undefined,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/item works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    caption: 'L_LANGUAGE',\n    style: undefined,\n    icon: 'sunny',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/language-selector works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    id: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    menuID: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/menu works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    caption: undefined,\n    style: 'rounded',\n    lines: 'none',\n    icon: undefined,\n    url: undefined,\n    layout: undefined,\n    type: 'navigate',\n    badge: undefined,\n    tabbed: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/menu-item works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    id: 'main',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/modal works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n    toolbar: '',\n    menu: '',\n    back: '',\n    search: '',\n    fullmode: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/page works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/slide works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tabID: '',\n    style: 'default',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/title works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreAppComponent>",
                "defaultValue": "{\n  component: SioCoreAppComponent,\n  title: 'SioCoreAppComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreCardComponent>",
                "defaultValue": "{\n  component: SioCoreCardComponent,\n  title: 'SioCoreCardComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreDarkModeToggleComponent>",
                "defaultValue": "{\n  component: SioCoreDarkModeToggleComponent,\n  title: 'SioCoreDarkModeToggleComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreFormComponent>",
                "defaultValue": "{\n  component: SioCoreFormComponent,\n  title: 'SioCoreFormComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreHeaderComponent>",
                "defaultValue": "{\n  component: SioCoreHeaderComponent,\n  title: 'SioCoreHeaderComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreIconComponent>",
                "defaultValue": "{\n  component: SioCoreIconComponent,\n  title: 'SioCoreIconComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreInputComponent>",
                "defaultValue": "{\n  component: SioCoreInputComponent,\n  title: 'SioCoreInputComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreItemComponent>",
                "defaultValue": "{\n  component: SioCoreItemComponent,\n  title: 'SioCoreItemComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreLanguageSelectorComponent>",
                "defaultValue": "{\n  component: SioCoreLanguageSelectorComponent,\n  title: 'SioCoreLanguageSelectorComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreListComponent>",
                "defaultValue": "{\n  component: SioCoreListComponent,\n  title: 'SioCoreListComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreMenuComponent>",
                "defaultValue": "{\n  component: SioCoreMenuComponent,\n  title: 'SioCoreMenuComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreMenuItemComponent>",
                "defaultValue": "{\n  component: SioCoreMenuItemComponent,\n  title: 'SioCoreMenuItemComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreModalComponent>",
                "defaultValue": "{\n  component: SioCoreModalComponent,\n  title: 'SioCoreModalComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCorePageComponent>",
                "defaultValue": "{\n  component: SioCorePageComponent,\n  title: 'SioCorePageComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreSlideComponent>",
                "defaultValue": "{\n  component: SioCoreSlideComponent,\n  title: 'SioCoreSlideComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreTabComponent>",
                "defaultValue": "{\n  component: SioCoreTabComponent,\n  title: 'SioCoreTabComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SioCoreTitleComponent>",
                "defaultValue": "{\n  component: SioCoreTitleComponent,\n  title: 'SioCoreTitleComponent',\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [\n        { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n        importProvidersFrom(SioCoreModule.forRoot(environment)),\n        provideRouter(routes),\n      ],\n    }),\n  ],\n  parameters: {\n    layout: 'centered',\n    docs: {\n      toc: false, \n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n    leftPanelType: undefined,\n    rightPanelType: undefined,\n    leftPanelMenuID: '',\n    rightPanelMenuID: '',\n    tabMenuID: '',\n    tabDesktopPosition: '',\n    tabMobilePosition: '',\n  },\n  \n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    lines: 'none',\n    value: '',\n    position: 'left',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-down-outline',\n    shape: 'compact',\n    title: '',\n    subtitle: '',\n    img: null,\n    altImg: 'Alternative Text for image',\n    type: 'standard',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    caption: 'L_DARKMODE',\n    style: undefined,\n    icon: 'sunny',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    cancel: false,\n    color: 'dark',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: undefined,\n    url: undefined,\n    size: undefined,\n    only: false,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    name: '',\n    position: 'floating',\n    autocapitalize: 'off',\n    autocomplete: 'off',\n    autocorrect: 'off',\n    autofocus: false,\n    clearInput: false,\n    clearOnEdit: undefined,\n    color: undefined,\n    debounce: 0,\n    disabled: false,\n    lines: 'full',\n    type: 'text',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: '',\n    image: '',\n    alt: undefined,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    caption: 'L_LANGUAGE',\n    style: undefined,\n    icon: 'sunny',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    id: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    menuID: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    caption: undefined,\n    style: 'rounded',\n    lines: 'none',\n    icon: undefined,\n    url: undefined,\n    layout: undefined,\n    type: 'navigate',\n    badge: undefined,\n    tabbed: false,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    id: 'main',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n    toolbar: '',\n    menu: '',\n    back: '',\n    search: '',\n    fullmode: '',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tabID: '',\n    style: 'default',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: '',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreAppComponent>",
                "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreCardComponent>",
                "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreDarkModeToggleComponent>",
                "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreFormComponent>",
                "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreHeaderComponent>",
                "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreIconComponent>",
                "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreInputComponent>",
                "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreItemComponent>",
                "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreLanguageSelectorComponent>",
                "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreListComponent>",
                "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreMenuComponent>",
                "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreMenuItemComponent>",
                "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreModalComponent>",
                "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCorePageComponent>",
                "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreSlideComponent>",
                "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreTabComponent>",
                "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SioCoreTitleComponent>",
                "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/core/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../**/*.stories.@(js|jsx|ts|tsx|mdx)'],\n  addons: ['@storybook/addon-essentials', '@storybook/addon-interactions'],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs',\n  },\n}"
                }
            ],
            "libs/core/.storybook/preview.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  logLevel: 0,\n  plugins: [],\n  backend: {},\n  app: {\n    title: 'Demo App',\n    language: {\n      avaibles: ['it', 'en'],\n      default: 'it',\n      fallback: 'en',\n    },\n    menu: {\n      main: {\n        id: 'main',\n        items: {\n          1: { id: 1, icon: 'home', url: 'home', badge: 3 },\n          2: { id: 2, icon: 'information-circle', url: 'info' },\n          3: { id: 3, icon: 'settings', url: 'settings' },\n        },\n      },\n      secondary: {\n        id: 'secondary',\n        items: {\n          1: { id: 1, icon: 'stats', url: 'stats', badge: 3 },\n          2: { id: 2, icon: 'information-circle', url: 'info' },\n          3: { id: 3, icon: 'settings', url: 'settings' },\n        },\n      },\n      logged: {\n        id: 'logged',\n        items: {\n          1: {\n            id: 1,\n            icon: 'person',\n            caption: 'T_MENU_LOGGED_PROFILE',\n            url: '/auth/profile',\n          },\n        },\n      },\n    },\n  },\n}"
                },
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [\n        { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n        importProvidersFrom(SioCoreModule.forRoot(environment)),\n        provideRouter(routes),\n      ],\n    }),\n  ],\n  parameters: {\n    layout: 'centered',\n    docs: {\n      toc: false, \n    },\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/app/app.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n    leftPanelType: undefined,\n    rightPanelType: undefined,\n    leftPanelMenuID: '',\n    rightPanelMenuID: '',\n    tabMenuID: '',\n    tabDesktopPosition: '',\n    tabMobilePosition: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/app works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreAppComponent>",
                    "defaultValue": "{\n  component: SioCoreAppComponent,\n  title: 'SioCoreAppComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n    leftPanelType: undefined,\n    rightPanelType: undefined,\n    leftPanelMenuID: '',\n    rightPanelMenuID: '',\n    tabMenuID: '',\n    tabDesktopPosition: '',\n    tabMobilePosition: '',\n  },\n  \n}"
                }
            ],
            "libs/core/src/lib/components/card/card.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    lines: 'none',\n    value: '',\n    position: 'left',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-down-outline',\n    shape: 'compact',\n    title: '',\n    subtitle: '',\n    img: null,\n    altImg: 'Alternative Text for image',\n    type: 'standard',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/card works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreCardComponent>",
                    "defaultValue": "{\n  component: SioCoreCardComponent,\n  title: 'SioCoreCardComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    lines: 'none',\n    value: '',\n    position: 'left',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-down-outline',\n    shape: 'compact',\n    title: '',\n    subtitle: '',\n    img: null,\n    altImg: 'Alternative Text for image',\n    type: 'standard',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    caption: 'L_DARKMODE',\n    style: undefined,\n    icon: 'sunny',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/dark-mode-toggle works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreDarkModeToggleComponent>",
                    "defaultValue": "{\n  component: SioCoreDarkModeToggleComponent,\n  title: 'SioCoreDarkModeToggleComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    caption: 'L_DARKMODE',\n    style: undefined,\n    icon: 'sunny',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/form/form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    cancel: false,\n    color: 'dark',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreFormComponent>",
                    "defaultValue": "{\n  component: SioCoreFormComponent,\n  title: 'SioCoreFormComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    cancel: false,\n    color: 'dark',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/header/header.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/header works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreHeaderComponent>",
                    "defaultValue": "{\n  component: SioCoreHeaderComponent,\n  title: 'SioCoreHeaderComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/icon/icon.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: undefined,\n    url: undefined,\n    size: undefined,\n    only: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreIconComponent>",
                    "defaultValue": "{\n  component: SioCoreIconComponent,\n  title: 'SioCoreIconComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: undefined,\n    url: undefined,\n    size: undefined,\n    only: false,\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/input/input.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    name: '',\n    position: 'floating',\n    autocapitalize: 'off',\n    autocomplete: 'off',\n    autocorrect: 'off',\n    autofocus: false,\n    clearInput: false,\n    clearOnEdit: undefined,\n    color: undefined,\n    debounce: 0,\n    disabled: false,\n    lines: 'full',\n    type: 'text',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/input works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreInputComponent>",
                    "defaultValue": "{\n  component: SioCoreInputComponent,\n  title: 'SioCoreInputComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    name: '',\n    position: 'floating',\n    autocapitalize: 'off',\n    autocomplete: 'off',\n    autocorrect: 'off',\n    autofocus: false,\n    clearInput: false,\n    clearOnEdit: undefined,\n    color: undefined,\n    debounce: 0,\n    disabled: false,\n    lines: 'full',\n    type: 'text',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/item/item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    image: '',\n    alt: undefined,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/item works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreItemComponent>",
                    "defaultValue": "{\n  component: SioCoreItemComponent,\n  title: 'SioCoreItemComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: '',\n    image: '',\n    alt: undefined,\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    caption: 'L_LANGUAGE',\n    style: undefined,\n    icon: 'sunny',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/language-selector works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreLanguageSelectorComponent>",
                    "defaultValue": "{\n  component: SioCoreLanguageSelectorComponent,\n  title: 'SioCoreLanguageSelectorComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    caption: 'L_LANGUAGE',\n    style: undefined,\n    icon: 'sunny',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/list/list.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    id: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/list works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreListComponent>",
                    "defaultValue": "{\n  component: SioCoreListComponent,\n  title: 'SioCoreListComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    id: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/menu/menu.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    menuID: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/menu works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreMenuComponent>",
                    "defaultValue": "{\n  component: SioCoreMenuComponent,\n  title: 'SioCoreMenuComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    menuID: 'main',\n    lines: 'none',\n    position: 'side',\n    toggleIconSlot: 'end',\n    toggleIcon: 'chevron-up-outline',\n    shape: 'compact',\n    style: 'default',\n    desktop: false,\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    caption: undefined,\n    style: 'rounded',\n    lines: 'none',\n    icon: undefined,\n    url: undefined,\n    layout: undefined,\n    type: 'navigate',\n    badge: undefined,\n    tabbed: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/menu-item works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreMenuItemComponent>",
                    "defaultValue": "{\n  component: SioCoreMenuItemComponent,\n  title: 'SioCoreMenuItemComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    caption: undefined,\n    style: 'rounded',\n    lines: 'none',\n    icon: undefined,\n    url: undefined,\n    layout: undefined,\n    type: 'navigate',\n    badge: undefined,\n    tabbed: false,\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/modal/modal.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    id: 'main',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/modal works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreModalComponent>",
                    "defaultValue": "{\n  component: SioCoreModalComponent,\n  title: 'SioCoreModalComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    id: 'main',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/page/page.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n    toolbar: '',\n    menu: '',\n    back: '',\n    search: '',\n    fullmode: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/page works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCorePageComponent>",
                    "defaultValue": "{\n  component: SioCorePageComponent,\n  title: 'SioCorePageComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n    toolbar: '',\n    menu: '',\n    back: '',\n    search: '',\n    fullmode: '',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/slide/slide.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/slide works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreSlideComponent>",
                    "defaultValue": "{\n  component: SioCoreSlideComponent,\n  title: 'SioCoreSlideComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/core/src/lib/components/tab/tab.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tabID: '',\n    style: 'default',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreTabComponent>",
                    "defaultValue": "{\n  component: SioCoreTabComponent,\n  title: 'SioCoreTabComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tabID: '',\n    style: 'default',\n  },\n}"
                }
            ],
            "libs/core/src/lib/components/title/title.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/title works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SioCoreTitleComponent>",
                    "defaultValue": "{\n  component: SioCoreTitleComponent,\n  title: 'SioCoreTitleComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: '',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/core/src/lib/components/app/app.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreAppComponent>",
                    "file": "libs/core/src/lib/components/app/app.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/card/card.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreCardComponent>",
                    "file": "libs/core/src/lib/components/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreDarkModeToggleComponent>",
                    "file": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/form/form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreFormComponent>",
                    "file": "libs/core/src/lib/components/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/header/header.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreHeaderComponent>",
                    "file": "libs/core/src/lib/components/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/icon/icon.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreIconComponent>",
                    "file": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreInputComponent>",
                    "file": "libs/core/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/item/item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreItemComponent>",
                    "file": "libs/core/src/lib/components/item/item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreLanguageSelectorComponent>",
                    "file": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/list/list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreListComponent>",
                    "file": "libs/core/src/lib/components/list/list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/menu/menu.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreMenuComponent>",
                    "file": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreMenuItemComponent>",
                    "file": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/modal/modal.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreModalComponent>",
                    "file": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/page/page.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCorePageComponent>",
                    "file": "libs/core/src/lib/components/page/page.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/slide/slide.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreSlideComponent>",
                    "file": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/tab/tab.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreTabComponent>",
                    "file": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/core/src/lib/components/title/title.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SioCoreTitleComponent>",
                    "file": "libs/core/src/lib/components/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/core/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreAppComponent",
                "coveragePercent": 40,
                "coverageCount": "8/20",
                "status": "medium"
            },
            {
                "filePath": "libs/core/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/darkmode-toggle/darkmode-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreDarkModeToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/header/header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/header/header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/header/header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/item/item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/item/item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/item/item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/item/item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/language-selector/language-selector.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/language-selector/language-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreLanguageSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/list/list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu-item/menu-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu-item/menu-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreMenuItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu/menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/modal/modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/page/page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/page/page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/page/page.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/page/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCorePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/slide/slide.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/slide/slide.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreSlideComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/tab/tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/title/title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/title/title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/title/title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/core/src/lib/components/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SioCoreTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}